<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>SP22343-NORMA2-Norma</title>
      <link href="/2023/SP22343-NORMA2-Norma/"/>
      <url>/2023/SP22343-NORMA2-Norma/</url>
      
        <content type="html"><![CDATA[<p>双倍经验：<a href="http://www.luogu.com.cn/problem/P6406">$P6406$</a></p><h2 id="题目描述">题目描述</h2><p>给定一个序列$ a_i,\cdots,a_n $，求：</p><p>$$ \sum_{i=1}^{n} \sum_{j=i}^{n} (j-i+1) \min(a_i,a_{i+1},\cdots,a_j) \max(a_i,a_{i+1},\cdots,a_j) $$</p><h2 id="分析">分析</h2><p>根据 $ n \leq 5\times10^5 $，$O(n^3)$ 的暴力肯定要炸，于是考虑分治，即把序列分成左区间与右区间，分别计算以下三种情况：</p><ol><li class="lvl-3"><p>区间左右端点均落在左区间。</p></li><li class="lvl-3"><p>区间左右端点均落在右区间。</p></li><li class="lvl-3"><p>区间左端点落在左区间，区间右端点落在右区间。</p></li></ol><p>其中第 $1$，$2$ 种情况用分治递归解决就行了，于是来着重解决如何求第 $3$ 种情况的问题。</p><p>首先，暴力枚举求第 $3$ 种情况的时间复杂度显然是 $O(n^2)$，总时间复杂度是 $O(n^2 \log n)$，肯定是过不了的。于是可以想一些关于区间的优化：</p><p>线段树？好吧，这个蒟蒻作者不会线段树维护区间最大最小值。</p><p>单调队列？虽然使用单调队列可以不用分治，但是由于区间长度是不定的，这也需要 $O(n^2)$ 的时间复杂度，还是过不了。</p><p>前缀和？前缀最小最大值的前缀和？这能算吗…好像真可以…</p><p>于是用分治+前缀和预处理，$O(n \log n)$ 的时间复杂度就能过掉此题。</p><h2 id="具体实现">具体实现</h2><p><s>（为什么要推这种式子啊）</s></p><p>如果在左区间内定一个下标 $ i $，对于每一个 $ i $，记 $ mi $ 为在 $ a_i,\cdots ,a_{mid} $ 内的最小值下标，$ mx $ 为该区间内最大值下标。显而易见，当 $ i=mid,mid-1,\cdots,1 $ 时，$ mi $ 与 $ mx $ 也是严格单调递减的。</p><p>同样的，记 $ mi_{to} $ 为右区间内最后一个大于 $ a[mi] $ 的下标，$ mx_{to} $ 为右区间内最后一个小于 $ a[mx] $ 的下标。同样显而易见的是，当 $ i=mid,mid-1,\cdots,1 $ 时，$ mi_{to} $ 与 $ mx_{to} $ 也是严格单调递增的。</p><p>所以，我们可以将第三种情况对于每一个 $ i $ 分 $ 3 $ 个部分来求：</p><h3 id="第一个部分：-mid-1-min-mi-to-mx-to">第一个部分：$ [mid+1,\min(mi_{to},mx_{to})) $</h3><p>这一部分最大值为 $ mx $，最小值为 $ mi $，直接等差数列求和就行了，这里就不赘述了。</p><h3 id="第二个部分：-min-mi-to-mx-to-max-mi-to-mx-to">第二个部分：$ [\min(mi_{to},mx_{to}),\max(mi_{to},mx_{to})) $</h3><p>这一部分 $ mi_{to} $ 与 $ mx_{to} $ 只有一个可用，这个时候就要用前缀和了。假定 $ mi_{to} &gt; mx_{to} $，最小值可用 $ mi_{to} $，最大值就只能用右区间的前缀最大值的前缀和。但是由于 $ i $ 不定，又不能针对于每一个 $ i $ 都算一遍（不然时间复杂度就爆炸了），所以前缀和要算两次，具体如下：</p><p>设 $ sum1_k $ 是 $ \max(a_{mid},\cdots,a_k) $ 的前缀和，$ sum2_k $ 是 $ (k + 1) \times \max(a_{mid},\cdots,a_k) $ 的前缀和。</p><p>由于区间长度为 $ k-i+1 $，所以可知，这一部分的贡献是 $ sum2[\max(mi_{to},mx_{to})]-sum2[\min(mi_{to},mx_{to})]-i\times(sum1[\max(mi_{to},mx_{to})]-sum1[\min(mi_{to},mx_{to})]) $。</p><p><s>（作者推式子好累，但打式子更累）</s></p><p>$ mi_{to} &lt; mx_{to} $ 是一样的。</p><h3 id="第三个部分：-max-mi-to-mx-to-r">第三个部分：$ [\max(mi_{to},mx_{to}),r] $</h3><p>只要第二部分搞出来了那这一部分就没什么问题了，不过是求 $ \max(a_{mid},\cdots,a_k) \times \min(a_{mid},\cdots,a_k) $ 和 $ (k+1)\times\max(a_{mid},\cdots,a_k) \times \min(a_{mid},\cdots,a_k)  $ 的前缀和就行了。</p><p>这样这道题就搞出来了。</p><p>什么？你说取模爆炸了？来试试 __int128 吧！（见代码）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> MAXN=<span class="number">5e5</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">const</span> __int128 mod=<span class="number">1e9</span>;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> a[MAXN];</span><br><span class="line">__int128 summin1[MAXN],summin2[MAXN],summax1[MAXN],summax2[MAXN],summul1[MAXN],summul2[MAXN];</span><br><span class="line"><span class="function">__int128 <span class="title">fz</span><span class="params">(<span class="type">int</span> l,<span class="type">int</span> r)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l==r)<span class="keyword">return</span> a[l]*a[l];</span><br><span class="line"><span class="keyword">if</span>(l+<span class="number">1</span>==r)<span class="keyword">return</span> (a[l]*a[l]+a[r]*a[r]+<span class="number">2</span>*<span class="built_in">min</span>(a[l],a[r])*<span class="built_in">max</span>(a[l],a[r]));</span><br><span class="line">__int128 mid=(l+r)/<span class="number">2</span>;</span><br><span class="line">__int128 ans=(<span class="built_in">fz</span>(l,mid)+<span class="built_in">fz</span>(mid+<span class="number">1</span>,r));</span><br><span class="line">__int128 nowmin=a[mid+<span class="number">1</span>],nowmax=a[mid+<span class="number">1</span>];</span><br><span class="line">summin1[mid]=summin2[mid]=summax1[mid]=summax2[mid]=summul1[mid]=summul2[mid]=<span class="number">0</span>;</span><br><span class="line">summin1[mid+<span class="number">1</span>]=a[mid+<span class="number">1</span>];</span><br><span class="line">summin2[mid+<span class="number">1</span>]=a[mid+<span class="number">1</span>]*(mid+<span class="number">2</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=mid+<span class="number">2</span>;i&lt;=r;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i]&lt;nowmin)nowmin=a[i];</span><br><span class="line">summin1[i]=summin1[i<span class="number">-1</span>]+nowmin;</span><br><span class="line">summin2[i]=(i+<span class="number">1</span>)*nowmin+summin2[i<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br><span class="line">summax1[mid+<span class="number">1</span>]=a[mid+<span class="number">1</span>];</span><br><span class="line">summax2[mid+<span class="number">1</span>]=a[mid+<span class="number">1</span>]*(mid+<span class="number">2</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=mid+<span class="number">2</span>;i&lt;=r;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i]&gt;nowmax)nowmax=a[i];</span><br><span class="line">summax1[i]=summax1[i<span class="number">-1</span>]+nowmax;</span><br><span class="line">summax2[i]=(i+<span class="number">1</span>)*nowmax+summax2[i<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br><span class="line">nowmin=a[mid+<span class="number">1</span>],nowmax=a[mid+<span class="number">1</span>];</span><br><span class="line">summul1[mid+<span class="number">1</span>]=a[mid+<span class="number">1</span>]*a[mid+<span class="number">1</span>];</span><br><span class="line">summul2[mid+<span class="number">1</span>]=a[mid+<span class="number">1</span>]*a[mid+<span class="number">1</span>]*(mid+<span class="number">2</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=mid+<span class="number">2</span>;i&lt;=r;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i]&lt;nowmin)nowmin=a[i];</span><br><span class="line"><span class="keyword">if</span>(a[i]&gt;nowmax)nowmax=a[i];</span><br><span class="line">summul1[i]=summul1[i<span class="number">-1</span>]+nowmax*nowmin;</span><br><span class="line">summul2[i]=(i+<span class="number">1</span>)*nowmax*nowmin+summul2[i<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> mi=mid,mx=mid,mi_to=mid,mx_to=mid;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> k=mid;k&gt;=l;k--)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[k]&lt;a[mi])mi=k;</span><br><span class="line"><span class="keyword">if</span>(a[k]&gt;a[mx])mx=k;</span><br><span class="line"><span class="keyword">while</span>(a[mi_to]&gt;=a[mi]&amp;&amp;mi_to&lt;=r)mi_to++;</span><br><span class="line"><span class="keyword">if</span>(mi_to&gt;mid)mi_to--;</span><br><span class="line"><span class="keyword">while</span>(a[mx_to]&lt;=a[mx]&amp;&amp;mx_to&lt;=r)mx_to++;</span><br><span class="line"><span class="keyword">if</span>(mx_to&gt;mid)mx_to--;</span><br><span class="line">ans+=(((<span class="built_in">min</span>(mi_to,mx_to)-k+<span class="number">1</span>+mid-k+<span class="number">2</span>)*(<span class="built_in">min</span>(mi_to,mx_to)-mid))*a[mi]*a[mx])/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span>(mi_to&gt;mx_to)ans+=(summax2[mi_to]-summax2[mx_to]-k*(summax1[mi_to]-summax1[mx_to]))*a[mi];</span><br><span class="line"><span class="keyword">else</span> ans+=(summin2[mx_to]-summin2[mi_to]-k*(summin1[mx_to]-summin1[mi_to]))*a[mx];</span><br><span class="line">ans+=(summul2[r]-summul2[<span class="built_in">max</span>(mx_to,mi_to)]-k*(summul1[r]-summul1[<span class="built_in">max</span>(mx_to,mi_to)]));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)cin&gt;&gt;a[i];</span><br><span class="line">cout&lt;&lt;(<span class="type">long</span> <span class="type">long</span>)((<span class="built_in">fz</span>(<span class="number">1</span>,n))%mod);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 题解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P2533 [AHOI2012] 信号塔</title>
      <link href="/2023/P2533-AHOI2012-%E4%BF%A1%E5%8F%B7%E5%A1%94/"/>
      <url>/2023/P2533-AHOI2012-%E4%BF%A1%E5%8F%B7%E5%A1%94/</url>
      
        <content type="html"><![CDATA[<h3 id="题目描述">题目描述</h3><p>给定 $ n $ 个点 $(x_i,y_i)$，求半径最小的圆使该圆能覆盖所有的点。</p><p>所以这是一道最小覆盖圆的板子题，双倍经验：<a href="https://www.luogu.com.cn/problem/P1742"><strong>P1742</strong></a></p><h3 id="实现">实现</h3><p>使用随机增量法：</p><p>很容易我们能证明，若第 $ i $ 个点不在前 $ i-1 $ 个点的最小覆盖圆上，那么第 $ i $ 个点在前 $ i $ 个点的最小覆盖圆上。</p><p>这个时候，就要求前 $ i $ 个点的最小覆盖圆了。在初始化时，把圆心设为第 $ i $ 个点的坐标，半径设为 $ 0 $，强制使这个点在圆上。然后枚举就行了，如果当前这个点在当前这个圆外时就去求第 $ i $ 个点与该点在圆上时的最小覆盖圆，这个时候就要枚举除这两个点以外的第三个点（三点定圆）。枚举结束后就能求出前 $ i $ 个点的最小覆盖圆。</p><p>注意循环不用从 $ 1 $ 到 $ n $ 全部枚一遍，这样会造成重复枚举。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    <span class="keyword">if</span>(!<span class="built_in">is_po_in_circle</span>(a[i],c))&#123;</span><br><span class="line">        c=<span class="built_in">get_circ</span>(<span class="number">0</span>,a[i]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=i<span class="number">-1</span>;j++)</span><br><span class="line">            <span class="keyword">if</span>(!<span class="built_in">is_po_in_circle</span>(a[j],c))&#123;</span><br><span class="line">                c.r=<span class="built_in">dist</span>(a[i],a[j])/<span class="number">2</span>;</span><br><span class="line">                c.o.x=(a[i].x+a[j].x)/<span class="number">2</span>;</span><br><span class="line">                c.o.y=(a[i].y+a[j].y)/<span class="number">2</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">1</span>;k&lt;=j<span class="number">-1</span>;k++)</span><br><span class="line">                    <span class="keyword">if</span>(!<span class="built_in">is_po_in_circle</span>(a[k],c))</span><br><span class="line">                        c=<span class="built_in">get_circle_from_po</span>(a[i],a[j],a[k]);</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>现在最大的问题来了：两点加直径定圆很简单，但是三点定圆有点难度，所以开始推式子：</p><p>假设两点 $(x_1,y_1)$ 与 $(x_2,y_2)$，易得它们的中点是 $(\frac{x_1+x_2}{2},\frac{y_1+y_2}{2})$，经过它们的直线的斜率为 $\frac{y_1-y_2}{x_1-x_2}$。</p><p>因为三角形外接圆圆心（即外心）在在三条线段的中垂线上，故可知刚刚两个点的中垂线斜率为 $-\frac{x_1-x_2}{y_1-y_2}$。再代入刚刚的中点，把式子化为 $ Ax+By+C=0$ 的形式，可知中垂线解析式为：</p><p>$$ (x_1-x_2)x+(y_1-y_2)y+\frac{y_2^2-y_1^2+x_2^2-x_1^2}{2}=0 $$</p><p>其他两条直线是一样的，联立求交点即可，这样圆心和半径都求出来了。</p><h3 id="复杂度证明">复杂度证明</h3><p>这个看似时间复杂度是 $ O(n^3) $ 的做法实际上时间复杂度为 $O(n)$，证明如下：</p><p>由于所有点中，每次最多有 $3$ 个点来确定最小覆盖圆，所以每次只有最多 $\frac{3}{n}$ 的概率选到参与确定最小覆盖圆的点，即每个循环向下调用的概率不超过 $\frac{3}{n}$。</p><p>首先最后一层循环的复杂度是 $O(j)$ 的，向上可以推得第二层的时间复杂度为：</p><p>$$O(i)+\sum_{j=1}^i \frac{3}{i}O(j)$$</p><p>因为要经过随机排序，通过上面的式子容易得到这层的时间复杂度是 $O(i)$，那第一层的时间复杂度也显而易见是 $O(n)$ 了。</p><p>AC 代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">po</span>&#123;</span><br><span class="line">    <span class="type">double</span> x,y;</span><br><span class="line">&#125;; </span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">vec</span>&#123;</span><br><span class="line">    <span class="type">double</span> A,B,C;<span class="comment">//Ax+By+C=0;</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">circ</span>&#123;</span><br><span class="line">    po o;</span><br><span class="line">    <span class="type">double</span> r;</span><br><span class="line">&#125;;</span><br><span class="line">po a[<span class="number">2000001</span>];</span><br><span class="line">circ c;</span><br><span class="line"><span class="function">vec <span class="title">get_vec_from_po</span><span class="params">(po p,po q)</span></span>&#123;</span><br><span class="line">    vec v;</span><br><span class="line">    v.A=p.y-q.y;</span><br><span class="line">    v.B=q.x-p.x;</span><br><span class="line">    v.C=p.x*q.y-q.x*p.y;</span><br><span class="line">    <span class="keyword">return</span> v;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">po <span class="title">get_po_from_vec</span><span class="params">(vec c,vec d)</span></span>&#123;</span><br><span class="line">    po pp;</span><br><span class="line">    pp.x=((<span class="type">double</span>)(-d.B*c.C+c.B*d.C)/(<span class="type">double</span>)(-c.B*d.A+c.A*d.B));</span><br><span class="line">    pp.y=((<span class="type">double</span>)(-d.A*c.C+c.A*d.C)/(<span class="type">double</span>)(c.B*d.A-c.A*d.B));</span><br><span class="line">    <span class="keyword">return</span> pp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">dist</span><span class="params">(po a,po b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sqrt</span>((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">is_po_in_circle</span><span class="params">(po test,circ d)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> d.r&gt;=<span class="built_in">sqrt</span>((test.x-d.o.x)*(test.x-d.o.x)+(test.y-d.o.y)*(test.y-d.o.y));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">circ <span class="title">get_circle_from_po</span><span class="params">(po A,po B,po C)</span></span>&#123;</span><br><span class="line">    vec buf1,buf2;</span><br><span class="line">    buf1.A=<span class="number">2</span>*(A.x-B.x),buf1.B=<span class="number">2</span>*(A.y-B.y),buf1.C=B.x*B.x-A.x*A.x+B.y*B.y-A.y*A.y;</span><br><span class="line">    buf2.A=<span class="number">2</span>*(B.x-C.x),buf2.B=<span class="number">2</span>*(B.y-C.y),buf2.C=C.x*C.x-B.x*B.x+C.y*C.y-B.y*B.y;</span><br><span class="line">    circ temp;</span><br><span class="line">    temp.o=<span class="built_in">get_po_from_vec</span>(buf1,buf2);</span><br><span class="line">    temp.r=<span class="built_in">dist</span>(temp.o,A);</span><br><span class="line">    <span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">circ <span class="title">get_circ</span><span class="params">(<span class="type">double</span> r,po o)</span></span>&#123;</span><br><span class="line">    circ temp_;</span><br><span class="line">    temp_.r=r;</span><br><span class="line">    temp_.o=o;</span><br><span class="line">    <span class="keyword">return</span> temp_;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        cin&gt;&gt;a[i].x&gt;&gt;a[i].y;</span><br><span class="line">    <span class="built_in">random_shuffle</span>(a+<span class="number">1</span>, a+n+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">if</span>(!<span class="built_in">is_po_in_circle</span>(a[i],c))&#123;</span><br><span class="line">            c=<span class="built_in">get_circ</span>(<span class="number">0</span>,a[i]);</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=i<span class="number">-1</span>;j++)</span><br><span class="line">                <span class="keyword">if</span>(!<span class="built_in">is_po_in_circle</span>(a[j],c))&#123;</span><br><span class="line">                    c.r=<span class="built_in">dist</span>(a[i],a[j])/<span class="number">2</span>;</span><br><span class="line">                    c.o.x=(a[i].x+a[j].x)/<span class="number">2</span>;</span><br><span class="line">                    c.o.y=(a[i].y+a[j].y)/<span class="number">2</span>;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">1</span>;k&lt;=j<span class="number">-1</span>;k++)</span><br><span class="line">                        <span class="keyword">if</span>(!<span class="built_in">is_po_in_circle</span>(a[k],c))</span><br><span class="line">                            c=<span class="built_in">get_circle_from_po</span>(a[i],a[j],a[k]);</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    cout&lt;&lt;fixed&lt;&lt;<span class="built_in">setprecision</span>(<span class="number">2</span>)&lt;&lt;c.o.x&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;c.o.y&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">    cout&lt;&lt;fixed&lt;&lt;<span class="built_in">setprecision</span>(<span class="number">2</span>)&lt;&lt;c.r&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 题解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tree-Summing-UVA112</title>
      <link href="/2023/Tree-Summing-UVA112/"/>
      <url>/2023/Tree-Summing-UVA112/</url>
      
        <content type="html"><![CDATA[<p>这题主要算法最多<strong>普及-</strong>，输入的难度个人认为高达<strong>省选</strong>！（调输入的时间占做这题时间的九成！！！）</p><h3 id="题目描述">题目描述</h3><p>给出一棵整数的二叉树，请写一个程序判定是否存在这样一条从树根到树叶的路，路上的结点的总和等于一个特定的整数。</p><p>这道题极其坑人的的点在判断两个儿子是否都为叶节点和输入上。</p><h3 id="0x01-树的遍历">0x01 树的遍历</h3><p>这里推荐使用在线算法，因为写起来简单。</p><p>很容易发现在每次读入数时，我们就到达了一个叶节点或一颗子树的根节点，这个时候可以加和，等到该节点的子树遍历完之后像自己的父亲，也就是上一个节点回溯。回溯的过程很简单，就是把当前的加和减去现在节点的值。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//sign 是负数的标志</span></span><br><span class="line">cin&gt;&gt;po;</span><br><span class="line">sum+=po*sign;</span><br><span class="line"><span class="built_in">dfs</span>(dep+<span class="number">1</span>);</span><br><span class="line"><span class="built_in">dfs</span>(dep+<span class="number">1</span>);</span><br><span class="line">sum-=po*sign;</span><br></pre></td></tr></table></figure><p>那么，知道了如何加和，那如何比较结果呢？</p><p>对于这道题，显然是在叶子节点处比较结果。那么，如何判断是否为叶子结点呢？</p><h3 id="0x02-判断是否为叶子节点">0x02 判断是否为叶子节点</h3><p>根据题意，叶子节点的格式是这样的：<code>(num()())</code>，要想判断叶子节点，就要判断两个空树。</p><p>方法一：如果读入第一个 <code>(</code> 后在探测下几个字符（探测的用法下一个部分要讲），如果为 <code>)()</code> 那就成功判断一个叶节点。</p><p>但是 C++ 自带的探测函数指针不后移，如果后移的话像 <code>()(...)</code> 这样的数据就会过度输入，对后面的遍历产生影响。</p><p>方法二：只探测每个树第一个 <code>(</code> 后是否为 <code>)</code>，如果是，就返回 $1$，如果一个节点的左右子树都是空树，那么才进行现在的加和与给定的数的比较。当然，探测到 <code>)</code> 后要指针后移，避免在下次遍历的开始读到右括号从而影响遍历。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(cin.<span class="built_in">peek</span>()==<span class="string">&#x27;)&#x27;</span>)&#123;<span class="comment">//探测下一个字符是否为&#x27;)&#x27;</span></span><br><span class="line">cin.<span class="built_in">ignore</span>();<span class="comment">//指针后移</span></span><br><span class="line"><span class="keyword">return</span> (sum==n);<span class="comment">//可以返回 1，也可以直接返回比较结果</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//...</span></span><br><span class="line">temp+=<span class="built_in">dfs</span>(dep+<span class="number">1</span>);</span><br><span class="line">temp+=<span class="built_in">dfs</span>(dep+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(temp==<span class="number">2</span>)&#123;<span class="comment">//如果在上面返回 1，这里就要进行比较</span></span><br><span class="line">flag=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>那么这样的话，我们的递归函数的返回值就是该节点是否为子树，需要一个新的变量来存比较的结果。</p><p>主要算法都讲完了，但先别急，因为这道题的输入可以让你爆炸！！！</p><h3 id="0x03-输入">0x03 输入</h3><p>我推荐的方法是用探测和指针后移的方式来实现左右括号的读入与判断。</p><p>先介绍函数，探测函数是 <code>cin.peek()</code>，这个函数返回该指针的下一个字符。后移函数是 <code>cin.ignore()</code>，这个函数使当前输入的指针后移一位。读入的时候就从后移后的下一个字符开始读入，后移后指针所指的字符不读入。</p><p>首先，我们要实现对于空格和换行的跳过：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">space</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(cin.<span class="built_in">peek</span>()&lt;=<span class="number">32</span>)cin.<span class="built_in">ignore</span>();<span class="comment">//&#x27; &#x27;,&#x27;\n&#x27;,&#x27;\r&#x27;的ASCII值都小于等于32</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后我们就在想要探测并跳过左右括号或者负号时，先去空格等字符，然后读入，判断，跳过就行了（但是很容易写错！！！）。</p><p>完整 AC 代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">char</span> k,kk;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> n;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> sum=<span class="number">0</span>;</span><br><span class="line"><span class="type">bool</span> flag=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">space</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(cin.<span class="built_in">peek</span>()&lt;=<span class="number">32</span>)cin.<span class="built_in">ignore</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">dfs</span><span class="params">(<span class="type">long</span> <span class="type">long</span> dep)</span></span>&#123;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> po;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> temp=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">space</span>();</span><br><span class="line">cin.<span class="built_in">ignore</span>();</span><br><span class="line"><span class="built_in">space</span>();</span><br><span class="line"><span class="keyword">if</span>(cin.<span class="built_in">peek</span>()==<span class="string">&#x27;)&#x27;</span>)&#123;</span><br><span class="line">cin.<span class="built_in">ignore</span>();</span><br><span class="line"><span class="keyword">return</span> (sum==n);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> sign=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(cin.<span class="built_in">peek</span>()==<span class="string">&#x27;-&#x27;</span>)&#123;</span><br><span class="line">sign=<span class="number">-1</span>;</span><br><span class="line">cin.<span class="built_in">ignore</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">space</span>();</span><br><span class="line">cin&gt;&gt;po;</span><br><span class="line">sum+=po*sign;</span><br><span class="line">temp+=<span class="built_in">dfs</span>(dep+<span class="number">1</span>);</span><br><span class="line">temp+=<span class="built_in">dfs</span>(dep+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(temp==<span class="number">2</span>)&#123;</span><br><span class="line">flag=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">sum-=po*sign;</span><br><span class="line"><span class="built_in">space</span>();</span><br><span class="line">cin.<span class="built_in">ignore</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">string s;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> u=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(cin&gt;&gt;n)&#123;</span><br><span class="line">flag=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">dfs</span>(<span class="number">1</span>);</span><br><span class="line">s=(flag)?<span class="string">&quot;yes&quot;</span>:<span class="string">&quot;no&quot;</span>;</span><br><span class="line">cout&lt;&lt;s&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 题解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P8734 [蓝桥杯 2020 国 A] 奇偶覆盖</title>
      <link href="/2023/P8734-%E8%93%9D%E6%A1%A5%E6%9D%AF-2020-%E5%9B%BD-A-%E5%A5%87%E5%81%B6%E8%A6%86%E7%9B%96/"/>
      <url>/2023/P8734-%E8%93%9D%E6%A1%A5%E6%9D%AF-2020-%E5%9B%BD-A-%E5%A5%87%E5%81%B6%E8%A6%86%E7%9B%96/</url>
      
        <content type="html"><![CDATA[<h3 id="题目描述">题目描述</h3><p>在平面内有一些矩形，它们的两条边都平行于坐标轴。</p><p>我们称一个点被某个矩形覆盖，是指这个点在矩形的内部或者边界上。</p><p>请问，被奇数个矩形覆盖和被偶数（$\leq2$）个矩形覆盖的点的面积分别是多少?</p><h3 id="实现">实现</h3><p>显然这题是一道扫描线，不会扫描线的同学先去做<a href="https://www.luogu.com.cn/problem/P5490">这道题</a>。本题解就不讲扫描线是如何实现的了。</p><p>由于要奇偶分开输出，我们的线段树就不能像下面的代码一样只维护一个区间长度了。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">pushup</span><span class="params">(<span class="type">int</span> now)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(tree[now].num)&#123;</span><br><span class="line">tree[now].len=x[tree[now].r+<span class="number">1</span>]-x[tree[now].l];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">tree[now].len=tree[now*<span class="number">2</span>].len+tree[now*<span class="number">2</span>+<span class="number">1</span>].len;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>很显然，上面这份代码的 <code>len</code> 要被拆成两个，一个用来存奇数覆盖，一个用来存偶数覆盖。由于要保证奇加上偶的面积等于总面积并，我们需要修改原来的上推函数。</p><p>显然，这要分成 $3$ 种情况：</p><ul class="lvl-0"><li class="lvl-2"><p>没有覆盖：奇偶都只需要从左右儿子加和就行了。</p></li><li class="lvl-2"><p>覆盖的矩形数为奇数：此时当前的奇数长度更多要依赖区间长度计算，于是先算偶数长度。根据偶等于奇（当前覆盖矩形数）加奇（左右儿子），偶数长度是左右儿子奇数长度之和。又由于满足奇偶加和为总面积并，所以奇数长度就等于区间长度减刚刚才算的偶数长度。</p></li><li class="lvl-2"><p>覆盖的矩形数为偶数：根据奇等于偶加奇，奇数长度是左右儿子奇数长度之和。同上面的分析，偶数长度是区间长度减刚刚算的奇数长度。</p></li></ul><p>在扫描线的基础上这样修改完上推函数，这道题也就做完了。</p><p>提示：记得把空间开大一点！</p><p>AC 代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> x[<span class="number">2000001</span>];</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">segtree</span>&#123;</span><br><span class="line"><span class="type">int</span> l;</span><br><span class="line"><span class="type">int</span> r;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> len1,len2,num;</span><br><span class="line">&#125;;</span><br><span class="line">segtree tree[<span class="number">4000050</span>];</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">defline</span>&#123;</span><br><span class="line"><span class="type">int</span> xl,xr,y;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> num;</span><br><span class="line">&#125;;</span><br><span class="line">defline line[<span class="number">4000050</span>];</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(defline a,defline b)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> a.y&lt;b.y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">(<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> now)</span></span>&#123;</span><br><span class="line">tree[now].l=l,tree[now].r=r;</span><br><span class="line">tree[now].len1=<span class="number">0</span>;</span><br><span class="line">tree[now].len2=<span class="number">0</span>;</span><br><span class="line">tree[now].num=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(l==r)<span class="keyword">return</span>;</span><br><span class="line"><span class="type">int</span> mid=(l+r)/<span class="number">2</span>;</span><br><span class="line"><span class="built_in">build</span>(l,mid,now*<span class="number">2</span>),<span class="built_in">build</span>(mid+<span class="number">1</span>,r,now*<span class="number">2</span>+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">pushup</span><span class="params">(<span class="type">int</span> now)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(tree[now].num==<span class="number">0</span>)&#123;</span><br><span class="line">tree[now].len1=tree[now*<span class="number">2</span>].len1+tree[now*<span class="number">2</span>+<span class="number">1</span>].len1;</span><br><span class="line">tree[now].len2=tree[now*<span class="number">2</span>].len2+tree[now*<span class="number">2</span>+<span class="number">1</span>].len2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(tree[now].num%<span class="number">2</span>)&#123;</span><br><span class="line">tree[now].len2=tree[now*<span class="number">2</span>].len1+tree[now*<span class="number">2</span>+<span class="number">1</span>].len1;</span><br><span class="line">tree[now].len1=x[tree[now].r+<span class="number">1</span>]-x[tree[now].l]-tree[now].len2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">tree[now].len1=tree[now*<span class="number">2</span>].len1+tree[now*<span class="number">2</span>+<span class="number">1</span>].len1;</span><br><span class="line">tree[now].len2=x[tree[now].r+<span class="number">1</span>]-x[tree[now].l]-tree[now].len1;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">update</span><span class="params">(<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> now,<span class="type">int</span> num)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x[tree[now].r+<span class="number">1</span>]&lt;=l||x[tree[now].l]&gt;=r)<span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">if</span>(x[tree[now].r+<span class="number">1</span>]&lt;=r&amp;&amp;x[tree[now].l]&gt;=l)&#123;</span><br><span class="line">tree[now].num+=num;</span><br><span class="line"><span class="built_in">pushup</span>(now);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">update</span>(l,r,now*<span class="number">2</span>,num);</span><br><span class="line"><span class="built_in">update</span>(l,r,now*<span class="number">2</span>+<span class="number">1</span>,num);</span><br><span class="line"><span class="built_in">pushup</span>(now);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> n,xlt,xrt,yup,ydown;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cin&gt;&gt;xlt&gt;&gt;ydown&gt;&gt;xrt&gt;&gt;yup;</span><br><span class="line">x[i*<span class="number">2</span><span class="number">-1</span>]=xlt;</span><br><span class="line">x[i*<span class="number">2</span>]=xrt;</span><br><span class="line">line[i*<span class="number">2</span><span class="number">-1</span>].xl=xlt;</span><br><span class="line">line[i*<span class="number">2</span><span class="number">-1</span>].xr=xrt;</span><br><span class="line">line[i*<span class="number">2</span><span class="number">-1</span>].y=ydown;</span><br><span class="line">line[i*<span class="number">2</span><span class="number">-1</span>].num=<span class="number">1</span>;</span><br><span class="line">line[i*<span class="number">2</span>].xl=xlt;</span><br><span class="line">line[i*<span class="number">2</span>].xr=xrt;</span><br><span class="line">line[i*<span class="number">2</span>].y=yup;</span><br><span class="line">line[i*<span class="number">2</span>].num=<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line">n*=<span class="number">2</span>;</span><br><span class="line"><span class="built_in">sort</span>(x+<span class="number">1</span>,x+n+<span class="number">1</span>);</span><br><span class="line"><span class="built_in">sort</span>(line+<span class="number">1</span>,line+n+<span class="number">1</span>,cmp);</span><br><span class="line"><span class="type">int</span> tot=<span class="built_in">unique</span>(x+<span class="number">1</span>,x+n+<span class="number">1</span>)-x<span class="number">-1</span>;</span><br><span class="line"><span class="built_in">build</span>(<span class="number">1</span>,tot<span class="number">-1</span>,<span class="number">1</span>);</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> ans1=<span class="number">0</span>,ans2=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="built_in">update</span>(line[i].xl,line[i].xr,<span class="number">1</span>,line[i].num);</span><br><span class="line">ans1+=tree[<span class="number">1</span>].len1*(line[i+<span class="number">1</span>].y-line[i].y);</span><br><span class="line">ans2+=tree[<span class="number">1</span>].len2*(line[i+<span class="number">1</span>].y-line[i].y);</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;ans1&lt;&lt;endl&lt;&lt;ans2&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 题解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>四月天</title>
      <link href="/2023/17/"/>
      <url>/2023/17/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="723f13727003201488357231ee73d3a42cd574eafe3f6adb7b7fc23dfe319dc0">502f5a5d5c295f55e2be09c3bd909305bb7063d6ec785008713d29663f9a9d2ceb775084130e06cf664f7570b966425ce04562d5f33a54535f65763948dc1ff8f14901d4e1926d386e4184e6c5df9ae8cec7ceb873b094d57d05d2df84ba46c23da0d248f35cc56c487500357d103f35ade84860564a969846ee5d9d7e68bad94417405df986b7779fb7f64c38116da44f4e5823f011c81ceec23cf3b1311b6da12767f0bc0c1265c7502ba6f3d674416a783f24cb1aee59bae01b19cc2d4953f6f7102f5625d92a292505ea1e1591834e75ff3d74ab223d49e744efe365c394d30f9d8d8d5122819567421cc5ee1ba8f062956f8a4f5396fc79c715ef7e8743690bdcdaf2a642ce1392b1cf8972b921bce918b7b090ce9242906fa321cf1566757d6f1a6a4af69514181bdad44a0d552eb2f5073f9240544343d5d32472329c217330e661cbbbf01551468611fe30a4c0606dd0fdd6608c5342513e5ac8591a5ecbd996d43a852677d424d77aa28427d6083ca26414cb5fa988f6f29caf8f6d4a40e35538fe6b8c1a798c09c56f0bf32c5de20e5f3a06ad910f1ce590aa32816ca3c2747b1381a0c70a6549041cb6910de44b67a5a739a82e8ced604fb1a5ea9c856f528967e1becfacbd653fb6512a94744088d139695925012be80a6dbf6600918be68bf2d8e538ebdc8dbde584c4db00d13007c1ca168262ce1713ac19591db9f1e793f9e313297aedd2438cd95652fc8960d9e5453e62ce84f8d2622a15ee9aa5f46ab1df99a41e6e880bbaf2bd3d636a6caf845884fbd7d1bc17ed15248538937f61f9c36ed5b1e9f5c0e66929c7bd8a8cedd04df7740ddf0b90d9f41efaa30b3dacdc34cf203da6f98c9143feb85fe65ef4c35cffa521909dc63974f7140f4c865187d8900c14265a04812886a33637a5321fe511de609f54383312a7d4b5598e012f510d1859e065bbd218068419193c6ca1dfc52328e3e8c735802457605370789f4f81d6f068a3ab169b04fe55ee9eafd62d97fbc8a4f8a8274289a6e3a5a919aaf035ad5405d185503115226a84f06c4358360272abfd9265a54b0069e02312ec2a4b321b4cbe600968b2c5097448555abb3bd76b710b5168d2dc46b809eb760d0123ad9d31400a438d2589da7c475d80a7a9b766ea3e27c6083e64ee8648b571c4eeb5cf523b0fe8334fa8f75650b5cdf98c4a60e854f47ddf776b3e7a50e12bd63c611ffbdf98d38870279874e758b30d61c8213fba77d3e24f8d4301b779af2eb77131fb996ffcb690b80ef2c99d5e32ac50c66103d261f14edbc5bbbbc9d6435807ac5be664154ea784ac5b76e58f4f1f12fa8a88ed0b86158c51562c441098c0b05e7c7a61ae16d204007d18e75f675475426abe3ac8d72539a33eaaf362b9811517520ed706d1e9dea5f20896cfa422e4cac39be4efcbcdc50a75772efadf109b5a6eee454085259ebffa84a3e607b1c7dcafa4b0687eeb9a204e3a87db170d3ec39c3b0e2aeeb7f5aac51b03a8a3f4bdac230c969c54d69bdb4f8f5a9b1b662c8d6b027952d213e0c065fc5da48e9d7a2d84d347fc4a01f1a3c35b6f802200430245767757415c46b27a641df0e983fccc942778729235f552052691aa448fb264ebaad73b1b57b127971b8d5712b6edfe444fef81b74a326a73405d1892140947a5c2824e7ff5fb3fb30c200fdc67b59d51e6b624866607ea40d8649128265c4da4d13951e086a02e2c1af5b4e5535a77c16b61a65d523ac48a376ab266b9f563af17fe166f05cbfa54292240cff656f1afe4b795d402ec076ef51afe9781e0e98d235adbd020b767ba0f4d066b05e7f7c44cd5b84bd84cd0370efce0ba7ca1c6531ab689a805245b3673e32cc420d295f31b80632a28334c8b959b45a8f339e0002cef5e5bfac35e2aebb566612ffdf9520bb567b33ae92e2e6aae411a641e7f0b3a8f1ac2bac2fdf33b379be9e9e4264637c0de18b502f1b50998cb60f1dc3e4053fd71f8d534165f3bdaf8ebf5a5823b6b1a7abb033ed94530a3c28dc35489f151beb97e3465a7db51b6e0b48c5a6eebbd48b24648923e5082eebaa5ed0bd138b8582a6018e0583688c04d20177f418cd2476d590604ba9c30da277080b41a4bac3f80b7f4fc38474491cde863b6d727b29fc604735b143eb9120a3b1e7351319de679e15bbfd837e6aac55f51c1ded8fa6353c10a290fc14cdc01c5ad13947642725c9f245c58b8e29432bbf68cf209af7ea9959c8f90c7fe4f4d734c29ea69dabe0bbaf726e82b377d81d290d1c568831d7de5ba50187a3e2ae46e3c7a9c508544823929ae7a81f6ad0fe24da92adcd299309d1a070be049168afae2287f993049f40070fa4e9a4d98e2d4d8b1601e0b116cc3f12e483643df257ab001ae561973b7f9c52b26324be41bab110b6104b4deb7d17df6f8b3c4bbbe048765ab81418d43f37d9e0b14842561487b09af84346a72e3f2fe03e5074e612fe8a247aa8593c713b8e3a47a04c62d7e2ba46feaf947e83ae2c944f111ddd1692e4185a705b2db6d8e7adb0370e5286a38a838c881a4923bc1d792fbb5e6914e0f3aae706b797d9a21df84288500f56cc8c63ea66aec0b58b0f01401b8be6d00338c56d24b926d7ec1ac63f1608e477b631ebe69d68af6d85e1f95b57ffc411771b9c03eba24287fc82997e165af4eec90aba2255cae23aa44b436fbadbbb710574ffee5e6e530217e02fb6c8e54e758917f764a862806bdb029bc40ccfe43299334e6d6eb91200b8e190194017420bc6cac24e4afb7eac748c19725fef47f6c60147af46884ebb122f1b10c99afb5e17381f06e239fbc83387f3a7db8b3e7c3899d690f016fb619375adc545f8837a0f9ef1447d0c503450bad4b6263c1067a164937d58d16ec275cc82ff9ee548d6c713fc438112058e81e4a17d0ede05c52f77df67a743d714900bd8542952ea774d92d2e540af91fa551eb980157254e34d2fb1ee3ff265157eaf2427c84f4667ad38decd4e7c678ff0737a1dc5a4e13a94cedf6c6b72381eac2a48a3984824018120960f59886e2b6af1658c47cf5161c6319bb257fed50d1bc70afa9cc2a64f1f4ef0f80e66f42e4a124c3cb4a98359d3ce878feed705b2503849d4248758984af06b6439a5c702e32ac088b23ca12448ac93e0da8f92fd74d908216d698cb58ad95d322928f7b1d16bdc644833c76b1dba0b618ae273f621c005dc80ceb1779e95d078620534991b5bfbbc68a90b11f2c925a6a148f3efc135819a07cd9df0f2b390611117b43f28351a2ece4b19ffca1ef18696a17e448bd4123f8dd86cba3587f485ad1842218647d03bd3270dd3b11afa77e879ed089b12ab9dfd888ca0e752eb2a7ffbfdc2bd30ed5a648510b7e61958ed9422092e97269f22f4f58c967cc5d4d4578bbb8bb7d9aab7a97b40a06d8998d9cfc4aea33b0fb4adf34e66a9a94cf0b76a61155e65f608a2b9a73fad09b1ecdfd86be2390647ff2d2d6b155aec328fae4b3a628da775a1b2dd47de38c1559ee19a32f6c9ce468eedad7f71baeb81cb504738abb19a3467ed1a123ac0b6c66312220b9c3d26a8f362f3369a09dd814082da3e58636a4a66df11daeef88ffdd78fc81aadfe75933f022df1c92dd98c5c8f37ef38e3768a989f9bfe0ab1a78c14e3c30c0f23f0157f994b34a6de222b8851b226ae87b68a6e9dcb2a90703e6923626ae122d1efbc99ca0daac489d2f9ed6fbb4d3da3b658b3cb77ca4608428012357b6cf726ff0c921d4450ad91cb699c0da95ac12e0f82786f53fa880a6268a994506408b6f9f7b2602a61d343fb6cb96738b1bec89b0f67f241afae1630a5cf20255bae85080ab5c65905cd19139d41c70fb42b0676d63a552cd52c8c83cb78514070909b0d834dbea9ec7542bd1ff0a8b70e740889239b41c74f4cf3b46120f164e9b942669ffcd708cb9802ebbe524b7e35924f4df5a66e0f04ea6449ca5889c93e95cf7c0d0751680f334b5c3805c375d73e4904c2e7b926f659942e0f42c7c5ba30a4342a648adb415bdfa4deed5675ecdaef5ed7b16dda341631b4e4b0a839956ce3bdc382312d53282fd995fa5175b8c986cd80a46808194eb9212ffe35f23fd74ac09b3b8319d405070d3a0fe057d7081483548a9e301ef4f696d1b1867ed8af9a82b104a660f9725051b15e799ad85e090dd4a5de5f1687028e3e435ad7108e4cdf5a02ab02fb8153bb8502a5c9f1b4baa9582a101ff4115d757084c186b672c451436f8067e233f1a263d5371c2f958da7cadfaf6651c912e1e5072f04ba291fd2c2d8862c3efc9ca0166080f7b7479100ab3de7e2ffb82c03454d2d61bbf4f373f1fbb4a556487cf42be5f68a3e8109fb09076e4c94055f81d55913fc397c7c7ddecb85cf6337947261a65f9ef0da68d1568c7f3c544b77bf3b1f95344e01204ef334e101e84e6ac7c66187359a938b17d816fc4dbaf8e0b653a4f5861cd85520dff01350f2ffba196fddba5444bbcef4b10e957c87d31574b8b6da6b11a37768ac7ec517e6629bce058a359e24f517f01770470b15dd47a6eae6e9238ec7820baeb198450090cf0d120119115514cbc01518e77fafcf77f3ad8193c6cc632b27ab12da9cd0aff7602bc45ca5fd3260906303fef384261abb291f8d10590b0e0eeb5740702e9948514df860931f79a97d92374fad532c0a959d963d6c64d49e4d62561b3b4d33ef3a0dde6db0ae9882b2a8071d1b12143a1386ac58cb6b63e720e1e8745c4b9a20afe2996667cc4a8ded64aea35193edd94c4291f981011bf0cbfa8a870601ab7369d24eb42648cbee371713840a2cbfd64e320ab660d1a77fe323582ef777b191bedbef7d558773bb309e1df14e2d18227688caebf83df8a67674eda7396703a3c200cdc5b4a85435f6fea6292f2db2db77e9e5b237f85130aaf7ab15479ba31bac03c2ad7d252282b688a1af1195942059cb9d95509c03f8b21e419c046975dbc517c817ed872ef0110e7d761bb147db4d48a884347a95f334eb333c5d68fa4172042d26049003873d5c9083651d4b40c2f9806acafaa324e274fa14b86e1ef0ea42446845fffee618f0488b2d39ad4de0a79cd7f12c1cd325fb0c4c4acbbef540db594a6fc3a27242be2c809577bc3fa3296be40a2bf85a1d67f1a19eaff1079d9d5c4e95c3774f62e01490a0013d0e6e6a39232ee2e3e2841d043747487820728e56bf90821658f31acd9bde991fa9f8ca558daff0336628a319aa8950e8efe22e9ea80fbf439b415ca0e5fd263e75522e72d6ff0df37a083f4f61110d91993714e0062f96913e73616755846ce6808ad71560ad1de1154eb8a0a0979aba2a436d758bca23053761807f3fe37ea090fb99f3609d959e01bef5a9e664d28d212b5fafeec9068ad38431c9577a0b87ccb14fb621c751862b8fa53286b8b264819ab2b6e891af65259753f3dea665fe64552bcffbbd1bc3caaab9931555bcfd549c63595fe56d5ef5de6fd05f8f89e7af4ac7e6ff91952905111b08899e16077456c2415dd9ac6dba466965310fcbda601206d3bd1c22a85b315287b71c65c3e510a0cbb7a4e7d81334ee9d6eed85a0bbf1b5cae8488ec59fa105cdafc513b4f514f7cb5a0601a0ce3ac3222afb80e2c7405e34a223b4f21adcad7f1052c7f2df06fc5f5a4177e570a66fcd28d3a9726d00cb6d4796226b35c3c01e04623dc87034a44eb735363009883060e73a1745af7291160d88b9c05d7db791dfb52bbca190fd2fc68e2ccf97729b43f0a467b83c35af28733a49c906452855c0cbb811563cc24c2c3230fbe4b1209ab9ec60254ed52781327d4eb56e97d6ce5bad132c129a70a8b5fb724d7d58639fc8a94953eb7efa766b0ed478f8c6242bde83970c600d5c389f1fada2e3268c0540705f354ecc6f421b1f0973f64ba3bdda1bd2edaa74c52f07a7118e5b69388cdbbfe0a635da9ea24ed82de30d1295c03ca44fc91b2ed6782049942fb1752a7112934d61408fb07fbb8bd8a84d0763f14084273289a5787913b447d2aebcdf3b7d374786e50bd7964d51303f63332a7e49cf361b38008e811facfc7041871b228b39239012a9d6faaa78d2d212e1548205b2cc3ac9a2cc439dd0d15770570fa0d17a92a3715125dbda0f3bf55cbc50f1bb5b6d500017aa3c1b966b0b8422e3ccac7ab1e82e20cfdcf5405512f2015ab992cf5be9cfae79efdb52cf79ea9198bffd5d92ae47dd24af858a213ceaf77c8463fec76cf0794497229c80f01eecfc738c500a7a29f6373df5b14f61d7878d7d6b01d3b46bb37ec16852aeaba1d28b6c1e8167390727e2ce0abd8c17046dbc0d9ccd5ef64fe9e6faa6cc018ab8168bbde2c378171bbf50109a9442f03fb225c53f29290c500df28cf16180902785886aea17fc8b18368964b03c423537be581f67cf884657b4d5f5fb8686920f418603e1fb63bf7e257ceea1d547aae5b6189a69c2e2ba96b9cad15c19e00681a00a5ff59f6f37716f822294d6e9cd31c23fc66685e24c395ffb9c2b24073c6f525259bb1883684f0ce23300eb0b853aa0b1b630b61b912291b473ef198f1ac33088cab81f01f41528ba3c607eea2d5822e4df7083454e9024f1971b1bde21e51f9c0a67cad15fd77973a35a70efd518417b65c7d38e6e39b5fde1efbe6c76f32a0ec557dff66a313881345d98d98f9badec10188cdc07536b9a6ec637e2992980d59035b19948e5042683cb8e4373028d6bac242a0db523f7671881c622fba09a9b3010008385c09958894fdaec80387d690b9d4e4554c56bf86c7300fe248607e8e8e964b8651fc733c3d21076e3fbd4e</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 关于我的琐碎小事 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>步入初三下的感想</title>
      <link href="/2023/16/"/>
      <url>/2023/16/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="b1b1c23c46ab83f34b623adda6783e03dd4feb82d54e68c62b4ab560c5a9c8f8">eb0c39d974ec344f2c390a7d4fcbdea8173e26188b68e655aef7493d45ee144509e446c5c6f3b7ece2ff971ed9bef949d6cbde0910c759585438131bf2d5efe75cda71d47a678426658277dfbc52294ce1fb8c861f599430bc838772ce187cd83f2fc110f9ffbe323961be764f8926d837cae0892aced3a612ba991c30a655c14fbc41706ffe6f03d71ca640ce3abc55d3f7ddc020381c9d9c30eff478f9a629e020a14c9ab0b4613afb588750b9576c8704e06ba2dd37b47ed4e88dc554f1d789a25e2f81091ea662ecc4c7286e13598d1fcd3f3275acfbcb8c23ce0216957faa3b1ae8066cce1d3c6a0528fbb7a0ecad5d80d75967a2a22f95094a43e9643a99cf18a7bc4832971727e5fd75399f34e0930a52666e1ba667c7986eecfa3858faca43a9942178ebd0d753206c4c25b43ad533f64b2dd7018a48750e8eecda3d714a93c3c64d784928e4d3ae59b2663cdf8c520daa272f268b3c979026597b74bae80d3a5505375e09fc985e5547714bdd933e29e3483b3fdbb970e6d576e6728b126b943175e4eac3698c84c5a4075e633fca34928dc826a60aede025a2cf2af7862e6d0a661069653c0270ee336ee7cfd9e2ae209e00f404da71c650157bebf09d6e87c368cab605dfbdbbe19b51e83f5b6684e27ddb3be2540d7f78e0191a5a8c7e06cc4fe302c967b7b9002408164d9a7ba3ec06f7759715f73b0243aa7388938039c7bfcd07f0d523c08a4301ed1999ab52c59fe04269dec68a8288d3eed7fb84d1c97a495eff8427af6a5573cdb6ebe6151f2868b01aa73db021595fe089e896474d8e3c48c81bc5258f30021d359b88dd8a5a4bd1976ee50cebf8414c13fd20315279f2e6cc86207424cf5ee1cf6dbda77a6d2f37a8c198b9aa577398668130289b70f9e7fcd37881ab9d044c155045857ad9cee15010d9b21a13ac405d55b04abd3751bd5486959f34b7fe5d217081adddd83cb8fcce5dab5506c78101acd2b66e957d6fe93291be2beb62babc3f89ca38f3f5d8eeefd94cd9d10b8c2c81651ba4241a24e3bd2999d44b280f3bb6a91845338443909f8574b959da00872b6afe416a46a50a708e46b03e4e13cb178657382ec1368186f746a929f4872d8927cb815e9bb9aae19017c61090ba25d2cb30d4f82e184f834139e593309f4f0b70d014beb765f4cb65514604a0a7d74c9254e97c6e3417087d8ef114fddd0fe35ff00775db999fafb437daeeefda7d467f6f0fd3b82c85cd832ec0754189d712a7447935f9be4fe1c379bab53014613c4538b9ddf64aaaa26cf726c9b1ad10bf9e953485ac6c74debe650a06c1f0d0f3e57543868eadeb70ebdee865b8ee5a365267f992c9b36d49b07070bd416b93f23ccddf671169b9a1fad1358c7fc8446152b3598398750a0b5208dc0040058ce85d77914328e5c670158c18a2412eee036f07635aefbe2d8236f28266b9b1502b8b9470268f3dfc57d00a74a1b2f95b5915a3de96faa5433b4b173086608243df0e99b272b4196985732eaaa6d018de87b0ea33582cc514562769dabf5da77815768f0dafdc2da7f4a6420e1077fc4c97dd97756ed8691723b26519a4ce243477d36a3edb42a2dc3e98a9f9563cfa0f03c225a0e558852f0f91f983bcf67eba054339b1d24c47d7bf1b95a5e5f992a65100b18fa542bbd37f13917a10391fc66b47f046e022d872049e4899771910cb7e23ab39d08a0b2ae87fc9870e027104b0f94b8e18ea8f41c58f081c6b0e9c320a1b67ebfb0f35bce303c9f49aed4a167764dbbf75eeda31eb995b711802c248822cdd25459cfb2e3665f5cd1e9774cb8ebdd80d019688107c83398100541b6ace4c9c03b8dba8caf537b169671ce3c8c4138e3d60f87c98fe1b44ff5ce6c06ab4d20a01cc1bd3f11f3b72a548d1d91cd2eb256e40aa19be6a4f338ce608d696f7b14ea25e6b8d7206faf7675e11be21a254723ea3842bc64bc0f3760b00cc8b504b5b68c0c210af3d8c9252de53fb95903ed6c0247a3f9f6a8701156c73b309d8d5e27a22d0f4c7523f2c6c828253bcbcbebb427984492135cef79ac1b448fc2fa74295f0200b1cc5e07563aed01e22d236d81093d24269f75d6419c6a6910d082d9bf589f9541b5ffad39bade8ef0b815f40ae2ac241cccac3b9bf4966be10d573e909b0e922acfd138085462fa6694419408651592c4029b98a1bf9383dab90728c9a0ddbd9fbdbdeb7857d408d7517c1abd41a6ca6a84718b77f3614a4d2405f6b2868a9fe3ff7b1b6b89eadc246d32b9ad87d831a9c518aaac384a7bfd8320b4e22aa08262c29fce8d9a10a28f2841df73db164aba4c60eb1573aeb2ca5de510d2e8c77088988457ea504e9e16e70542d0cbd388e47685de145c44e416f8bf2453095b66e18aa87464d55c98e5f194ce73a0976126b234752aaea96431ef38eccce2685c9148933d21e6ea288f4bec085b7c9c08a58eaa73f004e0ef13cb84e4024cc082062d5d903185411dbb781fb8ef308e4f62fa0181f328d5cf889f428b2d6a59e47d44fc40243cb6b1068c0cefae2f0fe657f01c1084a2907f07fcc8984c931269ec6bca9d3f79e31bae3832e397b30a936fb075d8d956a6b12f183dd111580249306c76158c99df36f4ca4c325b7d5965c59a8a409e04ec219c737cdba82c422673436059a5d0c46fcf867800678f19b3f9be999268378852d048d3689e718d7378c46c03be348c5688b35a00c230bdef040d78ef2cf33cd4580b83c441cb19ffdc2f1bf3bda0f222bded8dfd8a11576d04d4070da8a204666d58970c475e6c415efe836ea3c655a9f20a965f06351ca9d512937589b27c4e2b743d16588ab763a76685e6fbdb2ab408ce777d9bfb6da10d051f50229d1ee5f793566fd0949d0cd3c58ad1abf2a74d3b653697f19a8385bc9fa9dffcb5ecd60c394879b92badba0d53f3c2a4e6ba34bad8feb9fc8afda8935fac1139ff97403c3070853ce3f418ddce8bc13be49b0dd0cd89295817c8abba3e5311abd3e8a314a316790dfc4dedff23c39bd96450b11d3189bd022531c0f05c4f2b4765e35f5d74ad167b047cd96a9b5b98094da241c21921376e7df33983eda9e59d17f5d1f9f8beb4e6ce72f397a7a5d585649ad7b24109d6d1fce0ecccbec74295d309ff525e58bddc11b8b7a4fc1ef8f47bbe9de1c3d2be49333a5748ce4abc7afb66d6d4dbad092326dcb705d33dd9896cb24c55e5e2fc7d8e3e23b98e26775ad561297c793747d17c7143667988bf582c3b389388d2531f4b9d1d4512395b03fcf9e97c67261d0401c63a29f6a37f137a3f9a3bb14d3d01093858b755fe78d7bcafcd081121b0a684f012b1150dd446c2375c6dffbfc3bae117d27d2b257b0141bf571c287297857b823abc4fc58cf7ab3626f223afa0b6f045d3cfc374ee3315810c6b69538e676e483af6c32fd09fc35d52bcb7ff2e29ad67b850a1717d69142f579ef8e5090dfdfc1a5396a8259256cc6605e22fb7ed6285c7d6d45e63527a65964832301f6902d66157adef89d63b4e0ddbe70826ea23fdaf500523cef64a749001eb5d32167f9218e03eeb4bcc9e912cbf37c6d5411a929100c030c89aa7977e8aa477a95544e0a7a43498072e17966a8</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 关于我的琐碎小事 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RGB常用颜色对照表</title>
      <link href="/2023/15/"/>
      <url>/2023/15/</url>
      
        <content type="html"><![CDATA[<h1>前言</h1><p>RGB颜色是网页常用的一种颜色表示法，但是常用颜色的代码千奇百怪。下面整理了一常用颜色的代码值。</p><h1>使用方法</h1><p>以下代码仅适用于html文档。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span> </span><br><span class="line">这里是非颜色文字 </span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;%该颜色代码值%&quot;</span>&gt;</span> 这里是带颜色的文字 <span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h1>常用颜色代码值</h1><p>注：以下说明顺序：名称，代码，效果（部分颜色在暗色主题下显示不清，可将主题颜色调为亮色食用）</p><ul class="lvl-0"><li class="lvl-2"><p>黑色 #000000 <font color="#000000">黑色</font></p></li><li class="lvl-2"><p>红色 #FF0000 <font color="#FF0000">红色</font></p></li><li class="lvl-2"><p>白色 #FFFFFF <font color="#FFFFFF">白色</font></p></li><li class="lvl-2"><p>灰色 #CCCCCC <font color="#CCCCCC">灰色</font></p></li><li class="lvl-2"><p>黄色 #FFFF00 <font color="#FFFF00">黄色</font></p></li><li class="lvl-2"><p>紫红 #FF00FF <font color="#FF00FF">紫红</font></p></li><li class="lvl-2"><p>绿色 #00FF00 <font color="#00FF00">绿色</font></p></li><li class="lvl-2"><p>青色 #00FFFF <font color="#00FFFF">青色</font></p></li><li class="lvl-2"><p>蓝色 #0000FF <font color="#0000FF">蓝色</font></p></li><li class="lvl-2"><p>橙色 #FF7F00或#FF8000 <font color="#FF7F00">橙色</font></p></li><li class="lvl-2"><p>浅橙 #FFCC00 <font color="#FFCC00">浅橙</font></p></li></ul><p>以下是其他常用颜色的值：</p><p><a href="https://imgse.com/i/pSBKcDO"><img src="https://s1.ax1x.com/2023/02/01/pSBKcDO.png" alt="pSBKcDO.png"></a></p><p>当然，这并不是全部，你可以通过<a href="https://www.colorhexa.com/">www.colorhexa.com</a>找出（或调配出）你想要的颜色。</p>]]></content>
      
      
      <categories>
          
          <category> html </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>更新说明&amp;预告</title>
      <link href="/2023/14/"/>
      <url>/2023/14/</url>
      
        <content type="html"><![CDATA[<h1>预计网站会更新的</h1><ul class="lvl-0"><li class="lvl-2">更改一切相关域名</li></ul><h1>预计要写的</h1><ul class="lvl-0"><li class="lvl-2"><p>Markdown语法汇总</p></li></ul><h1>更新内容</h1><p>注：该板块从2023/2/1开始统计。</p><p>2023/4/16：四月天</p><p>2023/2/12：步入初三下的感想</p><p>2023/2/1：随笔，RGB常用颜色对照表</p>]]></content>
      
      
      <categories>
          
          <category> 网站公告 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>随笔</title>
      <link href="/2022/13/"/>
      <url>/2022/13/</url>
      
        <content type="html"><![CDATA[<h1>前言</h1><p>作为一个学生，总有一些事，居于学习之上，却又被我们忽略了吧…</p><h1>2022/12/31</h1><h2 id="前言">前言</h2><p>今天跨年了，希望一诊后的我们成绩突飞猛进！</p><h2 id="感受">感受</h2><p>每次相遇，必然有它存在的意义，毕竟，下一次相遇的时间，还是未定的。</p><h2 id="正文">正文</h2><p>“…好，这周就做这些，快走吧！”β的声音终于消逝了，他盯着身旁的几个硕大的背包，心中升起一丝怨恨。</p><p>他背起书包，提起口袋；他承受的重量令人生畏，在回家的路上，总使身旁的人惊讶万分。</p><p>走过人流密集区后，他想起了自己糟糕的成绩，心想自己又要与老师“促膝长谈”，自己的时间又要被老师的“提升建议”占用。冥冥之中，他觉得自己承受的重量变大了。</p><p>走进小区门，他遇见了一个同班同学。他艰难地走过去，想要对他诉说自己所处的成绩差的境况。但是很不巧，那位同学考得很好，仿佛他就是年级第一似的，一讲到关于成绩的话题，他就得意得变得目中无人。想到自己的糟糕成绩，无法超越其他人，他感到自己背上的包袱再次变重了。</p><p>在小区中穿行的过程中，他看见了几个无忧无虑玩耍嬉戏的小孩，他们在滑滑梯上打闹，拿着各种道具争斗，叫着各种名字玩乐…想到自己尚未完成，或者说拖了很久的作业，他感到自己全身火辣辣的疼，承重已经快要超过自己的承受极限了…</p><p>终于要走到家门口了，望着远在天边，又近在眼前的家门，他突然想到父母听到自己的糟糕反馈，会有多感慨，多失望，多愤怒。他身上的重量再次增加，撑破了他的底线，他就这样被压垮了，在自己家门口被压垮了。</p><p>这就是一个学生因周围的压力而崩溃的经历。</p><h1>2023/1/7</h1><h2 id="前言-2">前言</h2><p>一诊即将到来，希望我们都能在一诊中取得好成绩！</p><h2 id="感受-2">感受</h2><p>就算是离你很近的地方，你也可能对它的沧桑巨变一无所知。</p><h2 id="正文-2">正文</h2><p>好久没吃米线了。</p><p>还记得儿时，我去上XES的课外班。一下课，我总会到那家抄手店去吃一碗米线。老板身手敏捷，将米线随铁纱筐一起放入锅中水煮，捞起后又行云流水一般配好佐料，一起放到碗中，端到我面前。碗中热气腾腾，米线如海浪一般汹涌，佐料就如海中游鱼。一口下肚，米香直冲味蕾，和着葱，辣椒，让人神清气爽。它消除了我上课时的紧张，卷走了我的学习压力；仿佛就只有这一刻，是在学习之余，享受生活的。</p><p>但是，我不久后转班了，离开了那个校区，也就吃不到那碗热气升腾的米线了。</p><p>升入初中，在饮食方面，我印象最深的是那碗牛肉面。那碗面，夹杂着食堂叔叔阿姨的热情，饱含着学校对我们的期待之情，承载着我们对未来的向往。但是，我总看不惯它细小却污浊的身躯，丝毫不像米线那样出淤泥而不染。</p><p>由此我联想到我的成长，我从一个单纯，透明的懵懂小孩变成了一个心灵充实，思想浑浊的中学青年；就如这面与米线一样。米线承载着我的过去，而面承载着我的现在与未来。其实面也是由植株做成的，只不过米线制作简单，面制作复杂罢了…</p><p>所以，几年后又经成长的我，又会像面变成什么呢？</p><h1>2023/1/16</h1><h2 id="感受-3">感受</h2><p>当你完成一个让你历经挫折的事时，也许，这件事就不会再次发生了…</p><h1>2023/2/1</h1><h2 id="感受-4">感受</h2><p>有些事，在心中憋闷久了，总会抒发出来的。</p><h1>2023/4/2</h1><h2 id="前言-3">前言</h2><p>好久不更新了。</p><p>昨天有些事发生，导致原本开开心心的我差点崩溃，第二天我很快就恢复了（八成是因为作业写不完了），这里就不赘述了。</p><p>以下，是名为“内卷”的一篇随笔，但由于作业写不完了，我就只把结尾放送了，剩余的之后再放送吧。</p><h2 id="感受-5">感受</h2><p>生活中的一种种颜色</p><p>都 是 假 的</p><h2 id="正文-3">正文</h2><p>又要谈到往昔了。几个月前（），我和同学们拜读了一篇往届毕业生对我们学校的评价。同学们都关注的是那些优雅却又风俗的有趣文字，我却关注的是这篇评价的结尾，他是这样写的——</p><p>“感激你，你将我送上了更高级的平台，使我日后能够大展身手。</p><p>不怀念你，转身收拾了剩下的事物，竟发现除那以外，便一无所有。”</p><p>怀念是一定要怀念的，但是怀念的是那时的人与生活，还是只有那时的人，就因卷而异了，我心想。</p>]]></content>
      
      
      <categories>
          
          <category> 关于我的琐碎小事 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于我对异性感情的思考</title>
      <link href="/2022/12/"/>
      <url>/2022/12/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="a0d52d4701771ea4c8e2f6c16c555052f9be05018a288fb9a1cf52e2c59237c5">058d50c879ea6982b9fb539c888f4ebac4e06b272d60bf07fa619b097d973143d40c3e68bb31b2b1a7a88a4ba47770e2f3638b4c3f5adfc4dadec5b46c0f9534ec3bf84a2065435bb5be7c139ef96801285286c22dd2706ac0281d24c503ccf3b5d83f01575a9e2a22385802d6936a8c3748275e6be80a7e1747ec6788ba9b777f5d706f756cd81b3fffc3a8b2af6eae619ecac0575bfe3dfc3524879d0a95884dd2511e992412c5749686dbda4973dc80dc73ee209ad848d23bd0da40c0ac2ac7223e4ec70c1b1e1620644012c952ee265c809083ec1a49830a3f45d16fb867acca14d4ee58631fc33e93da22e01665811098ef620643a4667b1aa75fa1b3d951230ad0d3a30a9ce9b00b1ef53ea372e65aff0a9f9e4abd7332b0465ee3109c1144fe2584b63c65dd8fb81a889ae4a0e0c4c81819211b42f8d7895796fdbe81b26453bc41e2fcb8c06cc4774affbb19d2dccf8713b03a6e3bfb880d61605c4bb4a7226e5e9e62061108665db98919b3d7ae9ec67cb33bea6d7e8f60a9b101f525a7c0088c6b05a6c38aea8523e9a8db99eec623143e5a063723f320f5ccda7d4b44531f609f7cd137cd713e3ea89d358305061275a7a111c97fb9ba6d73c380e0268f48f4292dd042d3fe7a0c624c6b602ae58bf7238f212b3f3b75eb3dd7fb9ed89f798805073575449ced249160de3e65896e274bb4136a631fc268147d1bf40924dd9bfec1a8dc0cf2d8916e4e2df21d00126e381f028a425b541623c3168a4ecdd8de32ae0fe04fd1da16312dd4c64a3f6975bb768db39ddc45926721535f11ffa7958f29bc835739721c4d147f287238cf47a3e0deee04c6d548b6d49919795fc5f42ec7301be446338d6ff027cc30ee7c0ed1e04d9638df226085dee1c40163238045654c2d4e5390649b30826541e8f2e8256ab22706c9c2c0abac21e5f8309ffd09a56944f64834bb8bf21ed0f988078dd11085170b8ae11990f3449b0f5c24f81c7cd8ce40af73d55e0d630530fdedc8aecdd9065cd8288c2711c6a0a66ccfac6877d0813c7ccabe51dc8df337850ef21ac6fe6322439222e3e39799b0d2798ca3fd642749599e8cd3613d3cc0477bce2779628da718fed5513c666cef14b04d7fa1a46bd0919b22161d04b106c58b6e9a1e52818d4d09ff3fa09fbc22e40bdaf4a3ce982c4257f7fafe24403cdb899a6cd61e04c53ced3a0ea2559207b2e74ff56a69a80d64f95374f8fe79bc1da45a3e6e4f4b1b6c6460282f18eb07c7a021a3a53e20209e717beda78a9631a2ca277d6ec11254a7a4fa826fd5d45906c83cdca1523da767971512d3b39a398738e491abcdf3ab9e2c531330483504a6691280b77d4d9ae83be57cb602ea9f83a587e8dfa395e7d4393c45cb1359d7fa3e5492d8efc9cb393f7ce65533618c38d840ed47958abe738f05bba04412fef9b999cb13e1c7f8086ff382e66372d4a5bf43580230e3d210067c94a3c05f7923ebb2aa7230c14bd45f2cf9fb8072f2c16f95229807292ee61c99fae24c4eb595deeccb6efef1679732d00339a7821a7387aadc59f4428a938e1bbfbbb4bfa6445d2d4bfa88b1e4ffa2fa65c93c88065d35e456cb211ed135620175eb6f7eb81059e71073437809b7329b72cf0083c862572a0d69544fe037b0bf963410ae8d5c6adda320d1cee683bcfb9787d691d03b38cbf2eaa471d6d8a48d687bc9fb8e8463c9322e1595716a36237ee05bb5e7e4a5ce1f18ba61489ca46dedb133f90464d085496c6e383569727e9a998b47e03bc9f7c0ce534f62ec2f72641593acc26d76f7f7bd72935beb78df0dca0e25489ae1f18ae71fbdff39c6efd5a91c34e97eb000bd1a62d211e318c2ed4d381365cf7d99279184786f06024d17ef6161cf29c32637276338801abeefacc1028e0fc55c797e4420ef7f9697ef44978f916211dc2751ebe0c3559eb1fcee6e0a8359a5dca7bf6bc0b1d6942d7d39897df4a0ea4c35c22c72c65a20962066d6af34b3acca823cdefe8df79a1be09cb01b3c63f2e75f7049fd3c7f51b05004b9df4d9becf08f13491ca940a6a886ece031a0357ae438d789de1f5528de7eee2aa047d52581467a3f441faedc8047b03b6a33941e6c8fbb69838f57eddde2a864de3d509ba709a235410f8e2aa80826e67cb98f9d4689c8d3da133846d7a63874f260a22802bed46b896e35b670a46d8904cbb41e1b1e8239ab0842645ada36a35570c7aff192235f13e1f071bf5c71558a0f6f28d3f72531cbd6a0fb2f0a3573d4405dbc30f6ae1a2aeb14b385af7012fe179e3102e596e4c98812c17010a0848576f4c1d99ea48380bdb127e9a5e8298fe101df284d6772ba9063e26f9f7ac5f347fa032213864b1c1c493bdd2cd0f10df5e8a6633bb5997503dd62c1390e7d35ce29a68ce2c8e2220b1e7d34317f2ba8cc3dc3107b1eae4d49aecf28d3a317884b58d125380ed5118b243c083b1596e24010b65b621b2b55b0b0e01b41b0f593f8da58624520a744e412ae3f5bdd31ffffd3ff241f9ecb48685214c8d4e7457f602ae846528cea3579b397952e1ad70c320834e70e17127d0db5695d918473f2337230f0e06675ba00371ed7f60efa0c3543cbceec926ac174387a635807ef65c865da6deba4977354d35421094cc06f0773df5a27adc5b6768e659b37d6360d7f23e00fbbeed8253ad8be546503bd2c6b266a3b87f90d0d397ba48eca25679932a1a3d8f383a4ea1909bb5d8de50ae6bf4b541ad34898a6df9360c9855a9195fcdd916c8efe13b8982b3340f321dbe98ff2de7b47025b90d9343fcea0524c08bf43c777716d822077ec860f814cb6c05897bad47500c7824ab44dc2a41a631018aa6ab9bb48f140488cb5760b64817cb697267961c5eddf1c42a75c546202fcab4fc32557ff987a60523ad425a4a9fa9346877585c1433cd526d02abc780d25e8c0ce66f9c7d90eb71bef66a00a1e11df58657632dc49a1b33e101fc46e025c4234aaeaccdfb5a436a54a602cee9918d379ec309e5bd856bc03bef771b432a1ce607d7f64bc03dccb15e4295b91f30d8da3008379b31537fa2e333c912f09a8171d6760563b91fb77901f05ed57dab38423aba8bf4e9d4dc12a2a3e9e479eeffd85285142e5a57b957b80b70e40ed8f642ea654f7b01c8e36e3528758b09c6f5848c1bac6d19be7610471a18fe0b6c0e216ea72a24024fa327c1763303c2ecee280ec9fcfadf93e7726c5408e94951915864ecb7689cdf53cd7369f48cf0adb3f4c7462d30d251ed1bc3dda7b80d596d694b2e849f09d4208b8be405e0b67ee74f5836eb223d7790cb00ecfbf712c7737c90e959eb2b4187bf965cb8ebd91cce3cf4e4c0edb882812f2b046420f72487aba68b0b8215329dacae4119cf1038c6037f5e9a0ffa6b0f99c5fb4608fa6b995085a247f25e63c96ca25b076885d3e7eb8e6108d5c99bc822341f177abce0050c12696c308a8db4b7077fa17ecf5e12e626a2c2037aefa914f22560e32f3f8d956da54d22282a8e645bd530deb0d757ebc2d45fb9cfc9e50ea0a44ad04ba372f3b7b495a2bcee3e90b9e9096075c3babd19d9857049a608612efa592c946ba3f0f524263b8cd38a9f4a2a6af9209f3a6d60f4e3ba197b38c2610dd49ccd5e42934baa94c61dbd97968df2e85b84d170c2aee7996d0adc9c7d36048de9fb87f195986921d120dcd70d664892f80bc3e8c44ea090457734583611df24955b3a3871618e63365a6fde8922bedd0ccf81ab79fbe48b1581468332441f1e79b4371f02c14ad4108cc179539a93502036d5393a39fabd4eb602fe29605f4775d0334d862865b98f4135c67b2676dd7936c01c22e2c968e91c9e02927f0f8e3357b893396c61596e34a490f7a341a639ed78e833e7fcffff7403bb940a3632f1854d9662f653dddb039e9b81077725bbdbfff6e5bee83e3fd90ee501b4b0e3136fd567d95d0590ba533d490c98b906a395558d6a03429bbe6532509d27ad9732ff915010df65827779dd769a60f9d9a7a857fed9b225a70bda86560b9f5b38c38405a062c9cf7b94a8ba7402481cafeeeae52c6c3ce35c3260371a2aac1c1ae3613aa97b2d04d8abad992b23ff98886074a4d1f10a3406e3c0c657960a6cc21530a3d9f13906b6a17496c18e3f57b531841f16bc8a0e646376e182372b605a25e528a79ca1d40590efacb650eeee1ba89fd114f548d2cec7a4ade8cb4ac96d6d65305d98242d0b907388eecb142e15aae272b7e458df6bf9d7c02448504886549a00e98ee6ebb94e473cf3e78f9ef86f9b8706d52ecb711e17bcfb704b339dece076dc8ccfdca8bb608d6d507710c86b292407cc818578270af76525eabd01792ae74532f3a329429540262eb13c9272c65a94ec009210c8c16cdcae86e4bc9d2460cdbe1f873fca7bbe9290ea2a94a9877033c93a3fc64b8f81c11107b8c0aae31350834d1f558d1ef9660f86833f54481443e00fb6b01fb97ea917286ac69df351cf54494a795b5b2f8d857ba010238f74c9492ac1df9d1a266d5af5167fa13c14e572185c0e5800cf2525bb06d78d28e6f4ac164a39fc0fa4505c17e7f3cb12cc65538e0636b51d4039be3224ab3fbb302fadacf9db9bbb0256491d165309c442dd0f80ebcfd5577106bd2f2142ff41b4fab8acc0ca47dffd339ed2a45a98273f80e617adc80bffdcb34b653555c45807f</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 我对一些事物的思考 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 感情 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>12月月考的一些感想</title>
      <link href="/2022/10/"/>
      <url>/2022/10/</url>
      
        <content type="html"><![CDATA[<h1>考试前</h1><p>咱们就直奔主题吧。</p><p>月考总是令人提心吊胆，但我已放松心态。并不是说考多好或多差不能影响我，是我已习惯了。</p><p>浅定个目标吧：</p><table>    <tbody>        <tr class="firstRow">            <td width="99" valign="top" style="word-break: break-all;">                学科            </td>            <td width="99" valign="top" style="word-break: break-all;">                语文            </td>            <td width="99" valign="top" style="word-break: break-all;">                数学            </td>            <td width="99" valign="top" style="word-break: break-all;">                英语            </td>            <td width="99" valign="top" style="word-break: break-all;">                物理            </td>            <td width="99" valign="top" style="word-break: break-all;">                化学            </td>            <td width="99" valign="top" style="word-break: break-all;">                总分            </td>        </tr>        <tr>            <td width="99" valign="top" style="word-break: break-all;">                目标年排            </td>            <td width="99" valign="top" style="word-break: break-all;">                85-            </td>            <td width="99" valign="top" style="word-break: break-all;">                10-            </td>            <td width="99" valign="top" style="word-break: break-all;">                70-            </td>            <td width="99" valign="top" style="word-break: break-all;">                30-            </td>            <td width="99" valign="top" style="word-break: break-all;">                40-            </td>            <td width="99" valign="top" style="word-break: break-all;">                30-            </td>        </tr>    </tbody></table><p>    <br/></p><p>加油！</p><p>浅浅预告一下：新的DL-Fanmade-Class11-Only有望在一诊后出！</p><p>2022.11.30</p><h1>考试结束且未出成绩</h1><p>感觉崩了，除了英语可能好一点其他都差…</p><p>估分：</p><p>语文：110</p><p>数学：134</p><p>英语：133</p><p>物理：68</p><p>化学：47</p><p>总：492</p><p>真是差到极致了！！！！！</p><p>2022.12.03</p><h1>出成绩后</h1><p>感觉这次的改的很奇怪，以下是我的数据：</p><p>总分：496；年排：19；</p><p>下次加油！</p><p>2022.12.10</p>]]></content>
      
      
      <categories>
          
          <category> 关于我的学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> 考试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于冷漠的思考</title>
      <link href="/2022/9/"/>
      <url>/2022/9/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="c6554e6cb137d8725d1ba7614e97ffc85d01426679e513b18bc8ede5fc873f0e">0e4490283f34c45f3f689d8abc1ac2d0a42bb1a196f31e1f66313ad62e79d64ab19dc71b095efedb8bf15092e4f3ee99dfb70fad05fc5007f0b7b07c7edcc5b2b1672df6cb6dc9503e776362b170a82fc06b389a61fa0d6e87b37977174e4967807b535bfa2a9f2affb27aded50c7011080c9b1baa53e2cfb6ad6c6bd952b39dead2205b8339e88e34815abdc0b963cdb3a10a552a62ee5197f9d1cca3a7765838a2f2878b37ecafe8edaa681bb7dc1717c47aea63eff06c6eed69b80285f4fad4f03ecb9cc0ada8d87711663266076e1c28e918a4436aa7f4aa17e9098f5806a4a3a893e142de487c7e280107acf97471114cc750f8c57b40bc1590aa9123f10ba259b615d2015299665bd508a9806daed5035902ccac27f9119e20a11b7326435dc4df989012f100d1ed11889401c545a5ffd90cc91ef419dab9d1febf1dc20f0b11d0ea2866cb3c24b5135117173bf5f6b4031706c09481ec00868c4cfecef858c0917ab881bf24763c4718d218ed009c5cf2457354123592e63ea286f49c0d13f85ea4da1517c8bfade4f1b2d19026ef7d9428017e298360bba05e03bcd713801707517aba49fb512afc30e193da21290595f8fd06f1527bc1dfe149ebf0ac1ea7a970b13ef2c61d81344abe5d0e879d907e59a97a3b8c6d48a35f76f89ccd0f1677637bbba8f3612e39c12fc41aff68ad5083da896d4851fd631c14a884869e3c59e0fdba6a58c82b5f478aa49de3886894bd4872a73da204511e92e50609d63e41960c10f73a3855f35ab6667bb2c94776587b27e5e1938215fe283714aaa467da378f3348101a5d5e1ee52b607834f5079a3c2a38176ce3aa0a742bbcbfc221f092f8ea6e33b6a225de33ac1346249541ec6d643ce45d3e55f1cad14bc56c6461075938a4cfb6ba65d11cb2e80e088e3531458e1cad6cf664e71212bd0815efe55e70399379ce2050a1db479f8c2f7957097b1ca1983bff5dad990b59fb1aa3791c33580e5638d28c1f0440dbf51cca25bfafb12fd7d02229302911e53c4da4e752637b979280e52a6f748e333048aaaae9abdcb25f49384094097984266e3a3fd089dd0b7027c7e3a33b78f6d7ed2ff480469f024fb63bfffcfa5a38b42eb223087322147bce6f85bf7e46bca7e8115e4ce2b2561aa9af3cba85265c5bc5d3b1a16c468b0cf64c776b3dd3e4fd32afee1a97f31086ad4f9fa508592ebb855635a9094188e03d8a6fde8532326a95d8ea53f477759147219ce0c3ee6e8448feee90a5bbb0612f5d65eadd274beb8fc205b11315d8c1e6eb1d390d4822c75be7a5adf517721e235e0f57a933b6fe7ab5f37009c0eef7fd9d2a95c75b3887059ea48e8c26867ab89ce7693c4c0db79966da13b13c1f6130448e138be9e301cea1f4baf934322151d0161d78bbdb5b68077892d64547c77624b27c667a361ff9cb576c1b7f03d3bc82f1f200e1e4d4264d05c5cad103f500027f0c5930c6ff2a0001ecc9fa0bf987cee1c715c6cbf10aafe4f8a47edb7e919a95630a61a74e033f3a62b6b8e4aef8476462f91d70d730f32d88439117f482d3a455b795caf1ca52ad2aadc4d3ac0499d7139e53b7ffb81e14484cef098cc220e83b9ddec0ff76d34d7b257d66afbf0121ab6d3d828f912ff6f783431061ee15b6353e4b4d8360f491cba921736c5cd1cb082e0c4b5232b9e4909f17f8af48425d80d8c88df37de513e1ba0a55ecd73eebd91aaa0d56b3bb93d44cd88a96c65b85ec1e35625c0221f8b72c50a6028d2bdf9e8a0d1d9e9cabea725f3a2073b974028cff728ea062a9d8bb8df1a5545d8dc1bbaa0f9bfc33f79aed7c669612061d043a295950b3d3cfdcfab1ef3395742161d84fce1f0cef5aa17ff80cc6fb5d7afeebc96e039166120bb33d75586a55328d5f03150003c7495391643aa3b89930e1dcb467cfbdfb4380b453e0455134a74127c79b8e8c6d29a3a7288e9ac28dcca84a59dbf10653c64175f2782a45c3a45a4e735c1ff83870c831071725e9ed60825d39110ff49b01a0aed7b5db76f52e41e958f4d2e63df63a07d0f6c9f82253d9ecb8fcecf7c16b999884892e32fda9b5ffca07eb9f991351556acc170fba088ef7110206efecb93ab8b8f18f87511e3aaa5a0dae8de91c28bfe3cede37e5eb8b1491ee76556208ef338636652668dfbfdce60819081b683cf231f32e10c0b85759b92a66a320d198c99cdc06d85277aa2a867a82e779fa71f7ae96efaea2d21cea647c3e97f542ff8f49713ee4ba864c926f99ea62a9ba8a02447ad216604a1ebe44efb5017f2eccaf553f0876847e39945d22ae3e6fdb95dc6929ec8372aab10c52d9b10549d650d34c4630f10dc3775630e348f7a0c19bae3a2f8cccf30367cc70582970f0ec387246747f1acc8bbf6605719d88f2f58016bf62f5d624e5663ebcab243fe8dd5c40f4ad5e4b3820bb84cec0023703b568c2698feb9f0b6151933dd5885cee731a1fdc3bebb408955784d3fbe0c768edd3f4c63a6aaf2acae1793992fd8be94e566c0ca5f67bb137868fe2e9cb0b48df87d6d7cb36effc7f573d05c10a4ef30e4807b177343515a403c3f68d08672f2286dd1aaff2b5e0db0d558507587fc8866ae103dede6a4770bd723c993d0b7c9cead776ab54855f55e2533676aa175b07257fb1bf67ff8ddb054d0c518b0f4a904feb720e69c147f9d05c5bbd43d138bf888ded546d03ee6d9b1c04c4f15483b4648bbaab81a438762580adc3e99a498c6ce7ffd54fafb093c98a30bf7f7af8576679fbcd907e202f4493f2f6f70138b698a2456c53fa0d52de1a7468615c604f7720a6fc7963c34997ace095dcc7ca5aaf61931fbb8004a39ee3e6441506f892b978139298a0d24965dbaf32b53ea995788567276a8ed8d9b2d7c300dae68aef62e2f5132ffea4e6a36c8617070e639f67ed41f76160f6979a0b420a2358605c871ea033f34323c446b771ee9cb90dadd4378de4112325faf495c9a2389b09b1f198025028adb9adae9921ea0f778e4fa49de027612cd80f4635d81449dd664f6dff04e13dd7bca8e11558f973e24156c415226b0f1ccfdd3e406216287101a5c175e0ed2b8dd8ae0e30a4f09f7e51d6cb7c2198302339a5e551a8010750b0eb16e800382cdcd0fb57bc4eed0347fe9c207763f3951d84df4c11e28456d6c1b95cd456df302357de65c6ec931b95747e8d6a87f952e6921cbe18062af14cafacb95fb744d7cb90ad9e05364f3b07d0e878646181527cb16d6f6da58cf1dea2d04dc61b560f92db095247a0e81cb52fec88b6de17578e310d4cc8367e04578c56cb06a721f3b135e234f0bfea37aa4068dc37d4d556d6698975abf0cfc0fd78f37ebdd0aacf422fc490b2069ee082a093366485647b72e4c13610a4967a70ecb98f4c2a9e9b659ba7ffaa528de5</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 我对一些事物的思考 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> 人性 </tag>
            
            <tag> 冷漠 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于自私的思考</title>
      <link href="/2022/7/"/>
      <url>/2022/7/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="7e4c619e2bc532ecdcb3210a7aebeeddb5764f5c51a553fe7322f12b1e381d47"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 我对一些事物的思考 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> 人性 </tag>
            
            <tag> 自私 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>转-我的关于如何提高效率的思考</title>
      <link href="/2022/4/"/>
      <url>/2022/4/</url>
      
        <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>这篇blog我想写很久了，但是一直都没想好，因为我总觉得有些过于学术了。所以，若是你的需求很强烈，就来看看我的看法吧。</p><hr><p>阅读本篇《文章》约5~10分钟</p><hr><h2 id="导入">导入</h2><p>进入初三了，作业完成情况的差距越来越大。有些人在第一节晚自习就能写完作业，有些人在第二节晚自习能写完作业，有些人写不完作业。当然，这也有可能是好的学生和中等学生的区别，所以我从事件的角度来阐述我的观点。</p><hr><h2 id="Timeline的定义">Timeline的定义</h2><p>这样吧，会代码的先看下方的代码。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">Timeline</span>&#123;</span><br><span class="line">  <span class="type">int</span> s;<span class="comment">//效果</span></span><br><span class="line">  <span class="type">int</span> p,t;<span class="comment">//效率与在这个Timeline上花的时间</span></span><br><span class="line">  <span class="type">int</span> l;<span class="comment">//影响其他Timeline的因素</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">person</span>&#123;</span><br><span class="line">  vector&lt;Timeline&gt; T;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我这里定义一个叫Timeline（时间轴）的容器，简称T，表示一件悬而未决的事情，也可表示一类悬而未决的事情。完成第i个T的效率用Pi表示，在第i个T上花的时间用ti表示，第i个T的完成效果用si表示，第i个T影响其他T的因素（强度）用Li表示。</p><p>假设一个人有3个T，分别代表学习，与家长的接触，和娱乐（非以上两者）时间，那么，可以有这样的表格：</p><table><tbody><tr class="firstRow"><td width="189" valign="top" style="word-break: break-all;">Timeline</td><td width="189" valign="top" style="word-break: break-all;">T₁（学习）</td><td width="189" valign="top" style="word-break: break-all;">T₂（与家长的接触）</td><td width="189" valign="top" style="word-break: break-all;">T₃（娱乐（非以上两者））</td></tr><tr><td width="189" valign="top" style="word-break: break-all;">效果</td><td width="189" valign="top" style="word-break: break-all;">S₁（学习成绩，或者可以理解成完成作业的情况）</td><td width="189" valign="top" style="word-break: break-all;">S₂（与家长的关系好坏）</td><td width="189" valign="top" style="word-break: break-all;">S₃（定值，自我放松的效果等）</td></tr><tr><td width="189" valign="top" style="word-break: break-all;">完成效率</td><td width="189" valign="top" style="word-break: break-all;">P₁</td><td width="189" valign="top" style="word-break: break-all;">P₂</td><td width="189" valign="top" style="word-break: break-all;">P₃</td></tr><tr><td width="189" valign="top" style="word-break: break-all;">在每个T上花的时间</td><td width="189" valign="top" style="word-break: break-all;">t₁</td><td width="189" valign="top" style="word-break: break-all;">t₂</td><td width="189" valign="top" style="word-break: break-all;">t₃</td></tr><tr><td width="189" valign="top" style="word-break: break-all;">影响因素</td><td width="189" valign="top" style="word-break: break-all;">L₂,L₃</td><td width="189" valign="top" style="word-break: break-all;">L₁,L₃</td><td width="189" valign="top" style="word-break: break-all;">L₁,L₂</td></tr></tbody></table><p>各个事情肯定会<strong>互相有潜移默化的影响</strong>，这就是<strong>影响效率的关键</strong>，这里举一个例子。</p><h3 id="例">例</h3><p>当你上网课摸鱼被家长发现时，各个Timeline有所变化。S₂降低，t₂增加，P₂降低，L₂增加，导致P₁和P₃降低。又因S₃为定值，所以t₃增加。t₁+t₂+t₃的总时间不变，所以t₁降低。<strong>P₁降低，t₁降低，所以S₁降低</strong>。以下的表格也许更直观一些：</p><table><tbody><tr class="firstRow"><td width="189" valign="top" style="word-break: break-all;">Timeline</td><td width="189" valign="top" style="word-break: break-all;">T₁（学习）</td><td width="189" valign="top" style="word-break: break-all;">T₂（与家长的接触）</td><td width="189" valign="top" style="word-break: break-all;">T₃（娱乐（非以上两者））</td></tr><tr><td width="189" valign="top" style="word-break: break-all;">效果</td><td width="189" valign="top" style="word-break: break-all;">S₁ ↓（学习成绩，或者可以理解成完成作业的情况）</td><td width="189" valign="top" style="word-break: break-all;">S₂ ↓（与家长的关系好坏）</td><td width="189" valign="top" style="word-break: break-all;"><p>S₃（不变）（定值，自我放松的效果等）</p></td></tr><tr><td width="189" valign="top" style="word-break: break-all;">完成效率</td><td width="189" valign="top" style="word-break: break-all;">P₁ ↓</td><td width="189" valign="top" style="word-break: break-all;">P₂ ↓</td><td width="189" valign="top" style="word-break: break-all;">P₃ ↓</td></tr><tr><td width="189" valign="top" style="word-break: break-all;">在每个T上花的时间</td><td width="189" valign="top" style="word-break: break-all;">t₁ ↓</td><td width="189" valign="top" style="word-break: break-all;">t₂ ↑</td><td width="189" valign="top" style="word-break: break-all;">t₃ ↑</td></tr><tr><td width="189" valign="top" style="word-break: break-all;">影响因素</td><td width="189" valign="top" style="word-break: break-all;"><p>L₂ ↑, L₃（不变）<br></p></td><td width="189" valign="top" style="word-break: break-all;"><p>L₁ （不变）, L₃（不变）<br></p></td><td width="189" valign="top" style="word-break: break-all;"><p>L₁ （不变）, L₂ ↑<br></p></td></tr></tbody></table><p>最终导致学习成绩（作业完成度）下降。</p><hr><h2 id="分析与思考">分析与思考</h2><p>现在，我们成功把问题变为如何提高S₁，也就是如何提高P₁。显然，P₁与L（其他）有关：若L（其他）降低，那么P₁增加。</p><p>那么，如何降低L其他呢？</p><p>就拿只有3个Timeline为例（当然，你也可以把一些其他事情作为你的Timeline），降低L（其他）就等于要降低 L₂或L₃。但是，现在的家长似乎就<strong>只关注自己孩子的学习</strong>，所以<strong>在S₁提升之前，L₂几乎不可能下降</strong>。那么问题就出在如何降低L₃了。</p><p>降低L₃，也就是把自己的课外活动与自己预计的娱乐（对于我来说就是做项目）裁剪。</p><hr><h2 id="解决方法">解决方法</h2><p>经过分析，我总结出几个提高P₁的方法：</p><ol><li class="lvl-4"><p>裁剪预计的非学习内容，若无法裁剪，那么尽量抽出时间先去完成它。</p></li><li class="lvl-4"><p>减少补习班。</p></li><li class="lvl-4"><p>尽量不要在写作业时去想其他你要做的事。</p></li></ol><hr><h2 id="结语">结语</h2><p>在这篇blog中，我新定义了一个容器—Timeline。温馨提示一下，之后的blog中可能还会用到。</p><p>希望我的文字能帮助到你！</p><p>2022.10.22</p>]]></content>
      
      
      <categories>
          
          <category> 关于我的学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> 作业 </tag>
            
            <tag> 作业多 </tag>
            
            <tag> 效率 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>转-我的关于写不完作业的思考</title>
      <link href="/2022/1/"/>
      <url>/2022/1/</url>
      
        <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>众所周知，我们这几天作业<strong>比较</strong>多，于是常有<strong>写不完作业</strong>的情况。这里，我来分析一下这种情况的成因。</p><hr><p>阅读本篇《文章》约4~6分钟</p><hr><h2 id="我的现状">我的现状</h2><p>当然，如果要去分析这种现象的话，最重要的肯定是先从自己分析起，因为我对其他人不太了解。</p><p>我现在<strong>根本写不完</strong>作业，基本上需要在晚上<strong>再抽出1小时~1.5小时</strong>的时间完成<strong>当天</strong>的作业。我现在虽已经尽我所能去完成所有纸质作业了，但是<strong>整理的作业我会花很久去完成</strong>。下面有一个表格来直观的描述我的现状：</p><table><tbody><tr class="firstRow"><td width="185" valign="top" style="word-break: break-all;">我的现状</td><td width="185" valign="top" style="word-break: break-all;">纸质作业</td><td width="185" valign="top" style="word-break: break-all;">整理作业</td><td width="185" valign="top" style="word-break: break-all;">总作业</td></tr><tr><td width="185" valign="top" style="word-break: break-all;">完成时间</td><td width="185" valign="top" style="word-break: break-all;">≤1个晚自习</td><td width="185" valign="top" style="word-break: break-all;">≥1个晚自习+1小时</td><td width="185" valign="top" style="word-break: break-all;">≥2个晚自习+1小时</td></tr><tr><td width="185" valign="top" style="word-break: break-all;">完成效率</td><td width="185" valign="top" style="word-break: break-all;">自认为已经最快，除了一些难题做的比较慢</td><td width="185" valign="top" style="word-break: break-all;">自认为已经很快，但是会花大量时间</td><td width="185" valign="top" style="word-break: break-all;">自认为效率很高，但是就是做不完</td></tr><tr><td width="185" valign="top" style="word-break: break-all;">思考时间</td><td width="185" valign="top" style="word-break: break-all;">看一眼，出答案（除了难题）</td><td width="185" valign="top" style="word-break: break-all;">花大量时间来思考当时的想法，然后去整理做题的漏洞</td><td width="185" valign="top" style="word-break: break-all;">平均下来，应该占一半左右</td></tr></tbody></table><p>你看，这问题不就出来了嘛。</p><hr><h2 id="分析原因">分析原因</h2><p>首先，我相信我们班上的同学，在1个晚自习内完成所有纸质作业已经非常快了。那么，很明显，问题就出在整理的作业上。</p><p>对于我来说，第一次月考让我认识到，<strong>我的语言类学科太差</strong>了。于是，我就认为<strong>整理+分析答题漏洞+积累</strong>才是学习语言类学科提升的途径。于是，我尝试将大量时间转移到语言类学科上。我尝试将数学的整理变得<strong>非常精简</strong>，但<strong>压缩文字</strong>似乎需要<strong>更多时间</strong>。</p><p><strong>但是！<strong>我在做整理作业的时候</strong>常常想到其他的事情</strong>，常常进入<strong>发呆</strong>的状态。所以，<strong>提高压缩文字效率和解决发呆问题是重点</strong>。</p><p>如果你有其他原因，可以在评论区注明你的名字进行补充。</p><hr><h2 id="解决办法">解决办法</h2><p>通过刚才的分析，我总结了以下几个解决方法：</p><ol><li class="lvl-4"><p>将纸质作业写完后，先完成一点拓展，然后再去完成整理。这样可以减少你发呆的时间，提高效率。（减少发呆时间，等同于把你发呆的时间先利用，让你的效率提升，但我<strong>不推荐</strong>）</p></li><li class="lvl-4"><p>和心理学上的 <a href="https://www.sohu.com/a/576496365_121124790">幸福定律</a> 类似，如果你不在意你能写完还是不能写完作业，你的效率反而会提升。</p></li><li class="lvl-4"><p>少围着别人转，别人写得快就写得快了，如果你去影响他，只有你俩会被影响，其他人照样做，这不就降低你的效率了吗？</p></li><li class="lvl-4"><p>尽量利用上课间的时间，整理的作业可以先在下午的自习课做（下午的效率比晚上快），这样能提高你的效率。</p></li></ol><hr><h2 id="结语">结语</h2><p>这是我的第一篇议论学习的blog，欢迎在评论区指正错误，也希望我的文字能帮助到你！</p><p>2022.10.15</p>]]></content>
      
      
      <categories>
          
          <category> 关于我的学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> 作业 </tag>
            
            <tag> 作业多 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>转-亿些关于10.3聚会的小细节</title>
      <link href="/2022/6/"/>
      <url>/2022/6/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="8e187a4af90d81884ce2d3dc3afa838ba3effb47a2370b33662b7af494b82979">279c7afe24f4dbaaa0a76c1727d72f783d952a6ccb0e8d61d2d5bd9d446479223b46e73198069e7bbd5722976852af19994d9c8f410f2cb298435c263ff96288baec4015e3e5535548041eb2a45c6f823d69d8db1435177fd85f00eeb427c271e455959304fbefaae26a244dba4972893fed46b0ffae222ec3af3ffe7b79e2fb9d23dcb75a826740e88a5b8601bdca5bfa41dfd9ac341276f5e197ae26c992ba86106c6f469ba4a5d6d05a143c8925475afd7d7f48db9ccaefa8bf05965a56004064718031a0bac093dd518767f5f18063c09f605145222a2f3612819b582323be547addf1c8030909ec28dd4d193e49fdfff9e913c9b299fe02cfcb358a8289a9caa1b7aca33b1607119b081be36d39b918173a5f73d1b0fe7622adcd6babebfbdcbe9fe5a873d3b320e2607c9a0460aef1855acccf697c092e5980a1c35487f7b0be85323fb3310dfa40f029e812c7ec5be4c074d20ca11c494e7d0702dfc9d66b70890003f8261ff647db1794dbbf6d86219b8769af5d90a3dcd478ad1acd19766e020c096892a5c912e5ed994a6fb8069d096ddfc8a9695be3563832cae86c2e63253814ac36c8835874553e1b234c6251815f66f55d39fa74354270acff4177b5df130e3b3cc7fe7714dee46a8090064e2be574a256a790597a061675a46deea242ec13446cd7c29f5011373ed7cefb876eaf8c845bddc72fe15e5616eefdd687ded722223aa61ae1cabd5077f2431778f48dad5806eae4ec36d43b6c4a5d4f38f61d86f4dcce55a29b7a8a23f65165b861bc9ddbfaa02ec35efab8a006affe290279629bed57f8d3d185588807a6582e42fccdb728b35dbd865fde95d7b81f6cb8c55b0c3aef57b0a9baa2966c1360dd621b6303e2f344e7f80fb50b047d9ba22206eb003d3609a3e2ad9a005945e30dee99d2cbbed209673c6640a92b73ae3a38a17069a556b98ec6305082e91231348b0eadcb4c2ee950640cd1a06115b27d4b56093f86e097a49b1a68bdfec6248ee80a3ed76f87fbdfe0b796ecd281fe9fe6875c74cedb288723abab4f5f742c9b2b88de8cdbba869916b3ed0ed1f2a1efcae62f379bf9a4cb14939312c07d7383b155a996ef5ff474df69c7f5062d16faa2da84a77717e16160456cf0119a0fda92be0dc770856f7f5a78f5dce5b2f6c035c0fbee27696e1c0756ff37eb9352ae938a483a89a4a94ddd6a78ada5ddada22bc3e813a1a018efe007d5875c486498d7087ee5cac0aa82ec0893203d4bb6d855113ee986de9cdce90882e2bced6c073ccc06ec269ee6027e3ba2c8a3d361763a5bb131f99105ae248e738abc8da14e16eade285c478ce043d53d0dfb09a043ef5278f70795b4efb76d3c7d088520806eacbb15aed0fd4dc19dad161ffaa61eee5fa463317153141adc77873fce0354e50704fb48a388726b0f549a83fdac969cefdbdd715c274a17f62c1a184f739b43685196eb6c9f813564ef221dd6df0866b1992c82e6f92a2ea914b467291915ed24b5b902178450908e320d2ccfc27300b7210f1045b1e1cb15de49d6033dcc66c7147bf66feca03c977f80815f77826224387321f3f44af824819f5c3a3256d55b64d92da1e7b7f99f5ebeb5d739238b9d87fa44f5038348393b692870701cc5d7bff2a2eedf53cc7235f69785b93aa31693fb3dcc64a01a41e5612e0d3c37109e5956c058de6c0d33fa66972940e49fb3aea4689fd47c93a273bd465eaa4480d4058b3848f005c2d9614c4b73f391e0be6f5faa9382f1105674d8aa40b1d59cc3a44ac4c812a6e438b79c5db7f41d976d754178a69faac44538d07086fdf780f1b49d8bc998477d25712b6697433fa97366f5bc69d4e6938e906ef9ac2171375c981e84498ad831d5e6b7b8391766de4a78c51943179c4e01b9d19d16c9e64274299a378c57fcbce5d755d5e35abf91f34fc182c1be44ead3db6b55fbf8cef0c01edb760bd81799155da24e0aec7c943a1e1801efa40385b9fffd6de392f51c73ec632086afb0e8f366fcbb4c9a06e681c86b337ab60e4987a21bcbf7f4838173cabb967bfa2dda4d78a7e01d86f8743ba20969a3e8980cf7202fed5043bad67d6e468555b5bb7baaed274ac5b774934457686a235c9355cce9a99d7ff05a68a64de5fbadcf0a333e581a5f3484a30e4415be50367e30ef700369b1d183e61045860e4439dd874582312075d235a37139650b65564f9d203bf8e5ce85093d3f4c619627215d3f02e090829e5485d123df3483075f4207939fc67fc2ad74af7a20a965607d3485217e6fa5354b954bae5891ad349a159e3363e7d40c9c7aa0faf740ae5c9cdafed697220fdb16984c35cce93a98ba53251126ee9855f19a11997b61f226223a5755576d8dbf96d7d44055bce460e44fcfa11cf8fba5531ef69874056cde543c108ea7197a5d6d4e6d7e10eea09730778f905db37feda4532c290f270816a761897fe2ee0f0edaa5a7164f1aa977bc945d7c808eb5e1e40f7745ad56afdcd216e8eb220a11d522d402318819719c7973bdb7b60b2693cbb494ca872d0523603ff0323e3e86020165199df513641d255fe118abd3f00861aa3a7425fab78d7c69e4423f76698859afc822e41bf4f6d0151ea6a297b764f195019dd4dd037762daec7c5ea9904fd1da78810493021cbee038b498bcd62cba1c227699a1e32cfc9730f9a67ee04a15ff7e58243b38fa3cecf588c4529142690f1787f16c6b9e356383276151357ad420b5c64f9ee3941cf5ff9bbb4d2766c9ec96d9110214f6c1e983103baa93e397f1d759c0e8c55ec857294fe3ae3bb6da2a5e4eb40f26f2cedef7a5fcc0d6bddf51625a2fb04a100855cb9b4f9027880a01f7653b48a134335d305ec90428215d3b7eb8319dfa15097fea6ee0505c94344cb0992da2c3c34b65023bf3b345cc498ca29dc5f0ec63aca52735c32286cc342a0427b4f3b77a96c2e3b811410d3a7bd4d349de602f09838ce85dc3f78d1e287a00a97c5397ca00d31fd41fb7076d88441cb1b035841c84a84d6b060fea4e7007645fa17cf8150a2d5282325090b8f8be036ef8e910cee641d8a93e40c2c31946ef8bc79b5c1b1802643c986c9759d936fb1263f4214a5614f5896ee7ef1419d223e5efbbcc17423796e4d070e1df005001d062ef976acc58f3d1eb2fbb4905ca398cd53cc7e0a5f1ac7a874d099df42295b1cfc277f51d29533a5c74a5e13d6add9e9b2a5c7fd679e9818f0888cf81a3ea3046ee60624283759e81c33bd5baa6127fcb7b9a2e8a22076bba0451099e753b6c10fe529413f70a3c274bf0ee12cba59981c873bc653933e09063f59397506f02d94e4ae2a0c2e14218783190e8ac74196a50d053bdaa5406f2b9da5ba6d8a7d598176b477b5f8dacf6d3540481a39576b0b096b33aafaedb83e340240035d43753c9a8a0b3b4a6da6eed947339033de81121f3c71d5d9cdc23b2ffda99a2d023ef2e56806c009fe0b04ac2ce082b8705a7dd5dc30303f35024f7e0a80501b653b4e1f7f019a227df3669ff4ab52010910b979e2cd5b8b7752024f9b87c421bc02d212ad6e78677ddb9032ac2119ee08e8ecbef7fc6768836bed927b69abe4379c0970ba733fb2fb2a36bdf0d137d081d2bb9b8895644c4f697e2f35d5de0b87b4775a5c1bd5c56086e535df7aad58f7bed2fd1835ac1df5ca98a515c9f0273e7c88a567f452c7f934042144dc44f51881acd258dfa5903de3787da896fbfdef2e01af49bab00e29f0e2356887c43bd47a7ce8810d2f2f2fa3e8b664b69f6829a9ec9b405e8b1b728cfa86a16a43423840befccef8546246108ad19e6876d4d8affba32a0334df99485e1601d762e40e78dd927866a7707f3babeb6c85e1538ee3a56a9ab38d15d81748140774c080cadec0c0932563f2e573b8c1342ba8bec8100753c6d0f6a2f8c20bb5b8acb1691976dc77ddb9ca6a8cfb5895de2db3011200ce3ceb21ec9b7007317a4ac8e913a8384564b9e366418b294bfd38b6c10c4059a5f61e920da836ac8b3fc72282fdb269015c2e683e426014bc91219603c0abc9a0533952fa9dfca4fe0d0d60810b0a723750296427bf5abbd21e24fab01baf8b178f1d6439b5dc0f2325f49a062c16188422b855b42139f9ddac8a39b5c8341b7c319b6b9e10c78150dcd3fac0137b01eb45eacc22c5c7c60f3f22330b1f8359ebeba4ccdfe3adde17fb7d72ec9bda8e7e766dbcd88139ba56f15ac13a9de3f7d13149d6639d56d5536eb53a7aaf32108767bb6e1964356f7381a8ec6ecc9e92dd9e19670c4cf257e002b155b9dd8236f5698eaaa7dba30ffaec7cc78c1e2629eef1a412c9e052a02dec7f619eef71a0d57e420f6a0b8637f78fc2ecfbb4ef55ac289991cfd017f7c757b210b7c358840bb3c2e33af1269bc910e4f74a9b19efb3a9166099e48a16a7768f4efd8b7375497674535b2b7b0898821405b7b0c44a9787f22adf5a5231d677793d1c141f7038852c37b90b8320ad90d9a55d98e3a53dff501228fabefe36d7fbbb0dcec02e603641718e0318072591371cb69f434a5ccd8133f9b93117f2d92bf9794fcbfeff9f8ca3c08e5af148f89c5ad5a4fd574a8bfe4a05f0b0b1be07f909a2763a062a796862d8c29ae1894129757be67ffc605d5828c4e0e578ef16597a39697030bdbe9c7426099e7870051754aeeb6ae4ec2f6f156a6e75a788f33dc2e51f35d2dd535369ff88a0d05f1fe3c226f2b81ef20bab2f5446e9ba37c484da6660c7152031d40cb05cd091db876ffeb60011f58cbb48da3f01d82e5575710510866872cd9fd13a0304f8ed0b1b3a8a14b97f6d1207283f98450b48a387f6117c2aa13fb661fb59b45a7d90e8a441d3616cda3925a0fa8e0a6a5f4158bf8b7e7a89e153042dfa8d0563a605cb3240ce002bba3ff6e2f71335dd93ce76ef3e99cc287ff6e30a89958dfe35a81ec382e2eb9233c11e0940fd0bd8a80703eb73c0cfb3ef38aca5600c1f6c47add48d29a6af67fb5d5da0947beafeea0c9ab555235ce0b18916683350de780e53819bc2e29a8ac493d7ea4841035d8db872ddb7eb45bb7648b627289f4f10a1cb05624c4ff6e2dfb507c0b91223e88b5457cca77e5416ef3cbf333b17b85951984b41080b0e6f3bf2a123ce353252cb51491a689347be06979b0107acdba717b9ffa18e9da93d5e5076a9161a68acd001be9f54f20b2e8e40c843c1052b3d7c97d7e8200a82708108ff184e4fd48aaea6c1f45510adb460c2a85d5d71aaf043b72fbe30c0321bbb203f2876e39dc9cfb5423e3b2a325d72570eb618df15c9b85378b9644b7fc7c9f0ef72dcf748912425862ffad1e1fa9ef0aeb4177e74c1a1e5722206da61ee44c062ea7cae8c6ac13b656668d59d7dab180c4556764d7d41b961baa40e8ee4f2e3069bf87c2578f23161ebb1dc00e28805cc06fecbcf07fc8a38c16a87548ba36da7772b357205f6a5c06a0955c3dddd6735e8bb5ffa19c72332c2b7e64090ef4ee75d0e639722a2068c47a6ebde4ca3fc81b07410bfa803b2215d743d9a6448f380abc370cd280c5623d298846bf2bb092af9828f0b8a8e6ddc6e51bf6c79b84c751feafcff98d908f763df4d1115e94ce10b8c10a1bcf9d7558f6c1744afca70aff3a8d824c6852af24e2e7705f714bdfd65009dd6c88c2aabbfed3f96057dec710e714723bb3690b3e66aecddf54d35a59b1f23ba73d6051f9cb42772987d1092e28e7ef87c3569c82ea18e7c4eaf18eed9a155c8ab0f899b4e4a866a79bfff8fadfcbae927803167a6039632e11314f7dedb6098a2493521ce0aa875eef76d3fcd3ba9c66dbdff7b20a1f40c03301e69b2f7d2dcd101a00c77d9f628b265d9a885a7a427f72fb5bbd0013a9cb50949c87358130ba2777684cdc8e04fe56e89525fc8234a0946455822f5a13fdfe95b48b0ab7dc353744e21a949aadf7209557dad86db2d13ca4f33a34ba6072d26a51ef1c3019ac56313789bc76ea00aaff093ad3ac4640356ff50a9fd8175f693a990271b72c90e1270533caa48982e33053ed6d0596b01869891bcfb91467caea82b2311673e2c18b7a78cbbf11faf0a472d314fd2a102c17844bf4dbbe9dfcb0ff482ec438b79be019c1b41362016045798dd7d63cf1e43d79c4a384a31ba9376e11540fc21ec23e177ac25445f0831f442374228c7d9f88463634b87b45acd1e18c19f8ffb7e0e68b2073b410cdc5d6898285bf1882c4b63bad041a5809330a80094983e8e82aa02ee677d03d286c536c93a742fc1b8db474cbcc319a1738ebd0227be8a75958177e1f3ed8a4b1ff0cffbe1b185dd8bfc640b2e79a82f3f60626988566f67077459a13834979da46f17a93564363c13f594cd7f0e416a1087f990a119b361183694ad0118489389ab2b6fb950da21369357f988a4ede140160a40136cd3fc5105f44c8ab5f8cb49572bef57c8944400876eebb4264f8c50444e971770944267444e0e28893712a96ce67406a16636ac0a27ceef1eb7786296e88ccbbf16570cee7691812781f7ec2f5bd545ee0fb03630ce06828e4a7c46b18b5a5fbef6891c3e828e7cb74201a84ee1bb8b1717b1c3fbabc4c9ce4609c7f44d21fad287261ac4a7844f585922ef2f53ec56fd550c43440d63b270f6172a4faece551a53d8aceeaf901ec0e9aabae6984e735bd9432e45477bc7cbb0ed416cf70369077257dd365792c342748c430db176e4a941cb0c91cacb7432c7005398844c349bebe72b89d64467291f1d34a1daff894e5c6365b547a1fe266821528e1ce44fcd3991fb2c51c62dd3e151b602775ad5bb15d3d80e9a4ff43762659e473565614e34098bf5bcd77d953b75e4e165949895b939f71e21f4182aef9dc69298f404bdfa6ed6b7fe6da9cf8</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 关于我的琐碎小事 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 聚会 </tag>
            
            <tag> 国庆 </tag>
            
            <tag> 万象城 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>转-国庆第3天的万象城之旅</title>
      <link href="/2022/5/"/>
      <url>/2022/5/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="3336e1593a160fe084dcf5ed42e3624b6cf975f3f9003d9711779cfb77893b3a"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 关于我的琐碎小事 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 聚会 </tag>
            
            <tag> 国庆 </tag>
            
            <tag> 万象城 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网站评论细则</title>
      <link href="/2022/2/"/>
      <url>/2022/2/</url>
      
        <content type="html"><![CDATA[<p>各位读者大家好，由于有人发了一个评论，让我意识到我必须规范一下评论机制了。</p><p>最新机制如下：</p><ol><li class="lvl-4"><p>评论时注明你名字的缩写（如“王一全”-&gt;WYQ）</p></li><li class="lvl-4"><p>我会审核评论内容，不能出现任何诽谤等不良言论（我没有列举出来，不代表不是）</p></li></ol><p>望周知，谢谢！</p><p>2022.10.22</p>]]></content>
      
      
      <categories>
          
          <category> 网站公告 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站 </tag>
            
            <tag> 公告 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网站迁移公告</title>
      <link href="/2022/3/"/>
      <url>/2022/3/</url>
      
        <content type="html"><![CDATA[<p>各位读者大家好，这里发布一个网站公告。</p><p>原网站 <a href="http://blog.xyxw.cf/">blog.xyxw.cf</a> 已不再支持，此网站已迁移至这里(<a href="http://xyxw.eu.org">xyxw.eu.org</a>)。</p><p>望周知，谢谢！</p><p>2022.10.15</p>]]></content>
      
      
      <categories>
          
          <category> 网站公告 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站 </tag>
            
            <tag> 公告 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
